crystal_doc_search_index_callback({"repository_name":"action-controller","body":"# Spider-Gazelle Action Controller\n\n[![CI](https://github.com/spider-gazelle/action-controller/actions/workflows/ci.yml/badge.svg)](https://github.com/spider-gazelle/action-controller/actions/workflows/ci.yml)\n\nExtending [lucky_router](https://github.com/luckyframework/lucky_router) for a Rails like DSL without the overhead. See the [docs site](https://spider-gazelle.net/) for usage details\n\n## Strong Parameter Usage\n\n```crystal\nrequire \"action-controller\"\n\n# Abstract classes don't generate routes\nabstract class Application < ActionController::Base\n  # A filter can raise or render to prevent a route being executed\n  @[AC::Route::Filter(:before_action)]\n  def ensure_authenticated\n    render :unauthorized unless cookies[\"user\"]\n  end\n\n  # You can define controller level exception handlers for consistent error messages\n  # note, the first param is always the error object\n  @[AC::Route::Exception(Route::Param::Error, status_code: :not_found)]\n  def route_param_error(error, id : Int64?)\n    # as id is nillable, it will look for a supplied id (route, query, formdata)\n    # and set it if one was found and it could be converted\n    {\n      error: error.message,\n      parameter: error.parameter,\n      restriction: error.restriction\n    }\n  end\nend\n\n# Full inheritance support (concrete classes generate routes)\nclass Books < Application\n  # this is automatically configured based on class name and namespace\n  # it can be overriden here\n  base \"/books\"\n\n  # route => \"/books/?book=1234\"\n  @[Route::GET(\"/\")]\n  def index(book : UInt64? = nil) : Array(String)\n    redirect_to Books.show(id: book) if book\n    [\"book1\", \"book2\"]\n  end\n\n  # Params are automatically extracted and converted to the corrent type\n  # here `id` in the route matches the `id` paramater in the function\n  # route => \"/books/0FF/hex\"\n  # route => \"/books/123\"\n  @[Route::GET(\"/:id/hex\", config: {id: {base: 16}})]\n  @[Route::GET(\"/:id\")]\n  def show(id : UInt64)\n    {id: id, name: \"book1\"}\n  end\n\n  enum Color\n    Red\n    Blue\n    Green\n  end\n\n  # route => \"/books/set_color/RED\"\n  # route => \"/books/set_color/colour_value/2\"\n  @[Route::GET(\"/set_color/:colour\")]\n  @[Route::GET(\"/set_color/colour_value/:colour\", config: {colour: {from_value: true}})]\n  def set_color(color : Color) : String\n    colour.to_s\n  end\n\n  # Websocket support, the first param is always the socket object\n  # route => \"/books/:id/realtime\"\n  @[AC::Route::WebSocket(\"/:id/realtime\")]\n  def realtime(socket, id : UInt64)\n    SOCKETS << socket\n\n    socket.on_message do |message|\n      SOCKETS.each { |socket| socket.send \"Echo back from server: #{message}\" }\n    end\n\n    socket.on_close do\n      SOCKETS.delete(socket)\n    end\n  end\n\n  SOCKETS = [] of HTTP::WebSocket\nend\n```\n\n* For more details on usage, see [the documentation](https://spider-gazelle.net/).\n* Also see [detailed project documentation](https://spider-gazelle.github.io/action-controller/ActionController.html)\n","program":{"html_id":"action-controller/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"action-controller","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"action-controller/AC","path":"AC.html","kind":"alias","full_name":"AC","name":"AC","abstract":false,"locations":[{"filename":"src/action-controller.cr","line_number":12,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller.cr#L12"}],"repository_name":"action-controller","program":false,"enum":false,"alias":true,"aliased":"ActionController","aliased_html":"<a href=\"ActionController.html\">ActionController</a>","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"7.0.3\""}]},{"html_id":"action-controller/ActionController","path":"ActionController.html","kind":"module","full_name":"ActionController","name":"ActionController","abstract":false,"locations":[{"filename":"src/action-controller.cr","line_number":6,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller.cr#L6"},{"filename":"src/action-controller/log_handler.cr","line_number":4,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/log_handler.cr#L4"},{"filename":"src/action-controller/logger.cr","line_number":3,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/logger.cr#L3"},{"filename":"src/action-controller/spec_helper.cr","line_number":4,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/spec_helper.cr#L4"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"7.0.3\""}],"class_methods":[{"html_id":"default_backend(io=STDOUT,formatter=default_formatter):::Log::IOBackend-class-method","name":"default_backend","doc":"configures a logging backend for use with your application","summary":"<p>configures a logging backend for use with your application</p>","abstract":false,"args":[{"name":"io","default_value":"STDOUT","external_name":"io","restriction":""},{"name":"formatter","default_value":"default_formatter","external_name":"formatter","restriction":""}],"args_string":"(io = STDOUT, formatter = default_formatter) : ::Log::IOBackend","args_html":"(io = <span class=\"t\">STDOUT</span>, formatter = default_formatter) : ::Log::IOBackend","location":{"filename":"src/action-controller/logger.cr","line_number":73,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/logger.cr#L73"},"def":{"name":"default_backend","args":[{"name":"io","default_value":"STDOUT","external_name":"io","restriction":""},{"name":"formatter","default_value":"default_formatter","external_name":"formatter","restriction":""}],"return_type":"::Log::IOBackend","visibility":"Public","body":"backend = ::Log::IOBackend.new(io, formatter: formatter)\nbackend\n"}},{"html_id":"default_formatter:::Log::Formatter-class-method","name":"default_formatter","doc":"the default format for request logging","summary":"<p>the default format for request logging</p>","abstract":false,"location":{"filename":"src/action-controller/logger.cr","line_number":8,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/logger.cr#L8"},"def":{"name":"default_formatter","return_type":"::Log::Formatter","visibility":"Public","body":"::Log::Formatter.new do |entry, io|\n  label = entry.severity.label[0].upcase\n  timestamp = entry.timestamp\n  context = entry.context\n  data = entry.data\n  io << String.build do |str|\n    ((str << \"level=[\") << label) << \"]\"\n    str << \" time=\"\n    timestamp.to_rfc3339(str)\n    if ::Log.progname.empty?\n    else\n      (str << \" program=\") << ::Log.progname\n    end\n    if entry.source.empty?\n    else\n      (str << \" source=\") << entry.source\n    end\n    if entry.message.empty?\n    else\n      ((str << \" message=\\\"\") << entry.message) << '\"'\n    end\n    {context, data}.each(&.each do |k, v|\n      (((str << \" \") << k) << \"=\") << v\n    end)\n    if exception = entry.exception\n      str << \"\\n\"\n      exception.inspect_with_backtrace(str)\n    end\n  end\nend"}},{"html_id":"json_formatter:::Log::Formatter-class-method","name":"json_formatter","doc":"an alternative log output that uses JSON\n\nuseful for logging tools like Logstash","summary":"<p>an alternative log output that uses JSON</p>","abstract":false,"location":{"filename":"src/action-controller/logger.cr","line_number":51,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/logger.cr#L51"},"def":{"name":"json_formatter","return_type":"::Log::Formatter","visibility":"Public","body":"::Log::Formatter.new do |entry, io|\n  json = {} of String => typeof(log_metadata_to_raw(entry.data[:check]))\n  json[\"level\"] = entry.severity.label\n  if ::Log.progname.empty?\n  else\n    json[\"program\"] = ::Log.progname\n  end\n  json[\"time\"] = entry.timestamp\n  json[\"source\"] = entry.source\n  if entry.message.empty?\n  else\n    json[\"message\"] = entry.message\n  end\n  {entry.context, entry.data}.each(&.each do |k, v|\n    json[k.to_s] = log_metadata_to_raw(v)\n  end)\n  if exception = entry.exception\n    json[\"exception\"] = exception.inspect_with_backtrace\n  end\n  json.to_json(io)\nend"}}],"types":[{"html_id":"action-controller/ActionController/Base","path":"ActionController/Base.html","kind":"class","full_name":"ActionController::Base","name":"Base","abstract":true,"superclass":{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"action-controller/ActionController/SpecHelper/ContextHelper","kind":"module","full_name":"ActionController::SpecHelper::ContextHelper","name":"ContextHelper"},{"html_id":"action-controller/ActionController/Responders","kind":"module","full_name":"ActionController::Responders","name":"Responders"},{"html_id":"action-controller/ActionController/Route/Builder","kind":"module","full_name":"ActionController::Route::Builder","name":"Builder"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/base.cr","line_number":10,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L10"},{"filename":"src/action-controller/spec_helper.cr","line_number":50,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/spec_helper.cr#L50"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"action-controller/ActionController/Responders","kind":"module","full_name":"ActionController::Responders","name":"Responders"},{"html_id":"action-controller/ActionController/Route/Builder","kind":"module","full_name":"ActionController::Route::Builder","name":"Builder"},{"html_id":"action-controller/ActionController/SpecHelper/ContextHelper","kind":"module","full_name":"ActionController::SpecHelper::ContextHelper","name":"ContextHelper"}],"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"doc":"the base class of all controllers","summary":"<p>the base class of all controllers</p>","instance_methods":[{"html_id":"action_name:Symbol-instance-method","name":"action_name","doc":"the action name being executed (typically the function name)","summary":"<p>the action name being executed (typically the function name)</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":144,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L144"},"def":{"name":"action_name","return_type":"Symbol","visibility":"Public","body":"@__action_name__"}},{"html_id":"client_ip:String-instance-method","name":"client_ip","doc":"attempts to find the clients IP address using proxy headers or the remote_address","summary":"<p>attempts to find the clients IP address using proxy headers or the remote_address</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":800,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L800"},"def":{"name":"client_ip","return_type":"String","visibility":"Public","body":"cip = @__client_ip__\nif cip\n  return cip\nend\nrequest = @__context__.request\ncip = request.headers[\"X-Forwarded-For\"]? || request.headers[\"X-Real-IP\"]?\nif cip.nil?\n  forwarded = request.headers[\"Forwarded\"]?\n  if forwarded\n    match = forwarded.match(/for=(.+?)(;|$)/i)\n    if match\n      ip = match[0]\n      ip = (ip.split(/=|;/i))[1]\n      if ip && (!([\"_hidden\", \"_secret\", \"unknown\"].includes?(ip)))\n        cip = ip\n      end\n    end\n  end\n  if cip\n  else\n    cip = ((request.remote_address.try(&.to_s) || \"127.0.0.1\").split(\":\"))[0]\n  end\nend\n@__client_ip__ = cip\ncip\n"}},{"html_id":"context:HTTP::Server::Context-instance-method","name":"context","doc":"the [request context](https://crystal-lang.org/api/latest/HTTP/Server/Context.html)","summary":"<p>the <a href=\"https://crystal-lang.org/api/latest/HTTP/Server/Context.html\">request context</a></p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":139,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L139"},"def":{"name":"context","return_type":"HTTP::Server::Context","visibility":"Public","body":"@__context__"}},{"html_id":"cookies:HTTP::Cookies-instance-method","name":"cookies","doc":"parses the cookies sent with the request","summary":"<p>parses the cookies sent with the request</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":171,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L171"},"def":{"name":"cookies","return_type":"HTTP::Cookies","visibility":"Public","body":"begin\n  @__cookies__ || (@__cookies__ = @__context__.request.cookies)\nrescue error\n  Log.warn(exception: error) do\n    \"error parsing cookies\"\n  end\n  @__cookies__ = HTTP::Cookies.new\nend"}},{"html_id":"files:Hash(String,Array(ActionController::BodyParser::FileUpload))|Nil-instance-method","name":"files","doc":"returns any file provided in a multipart post","summary":"<p>returns any file provided in a multipart post</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":235,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L235"},"def":{"name":"files","return_type":"Hash(String, Array(ActionController::BodyParser::FileUpload)) | ::Nil","visibility":"Public","body":"if @__params__\n  return @__files__\nend\nparams\n@__files__\n"}},{"html_id":"form_data-instance-method","name":"form_data","doc":"returns any data that could be parsed from the request body.\n\nIt will only attempt to parse the data if the appropriate content-type header is set","summary":"<p>returns any data that could be parsed from the request body.</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":226,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L226"},"def":{"name":"form_data","visibility":"Public","body":"if @__params__\n  return @__form_data__\nend\nparams\n@__form_data__\n"}},{"html_id":"params:URI::Params-instance-method","name":"params","doc":"parses all the params (query + route + body form data) and\nmakes them available in one place","summary":"<p>parses all the params (query + route + body form data) and makes them available in one place</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":188,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L188"},"def":{"name":"params","return_type":"URI::Params","visibility":"Public","body":"if _params = @__params__\n  _params\nelse\n  _params = ActionController::Base.extract_params(@__context__)\n  ctype = request_content_type\n  if ctype\n    @__files__, @__form_data__ = ActionController::BodyParser.extract_form_data(request, ctype, _params)\n  end\n  @__params__ = _params\nend"}},{"html_id":"query_params(*args,**options)-instance-method","name":"query_params","doc":"parses the query params that were sent with the request","summary":"<p>parses the query params that were sent with the request</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/action-controller/base.cr","line_number":182,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L182"},"def":{"name":"query_params","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@__context__.request.query_params(*args, **options)"}},{"html_id":"query_params(*args,**options,&)-instance-method","name":"query_params","doc":"parses the query params that were sent with the request","summary":"<p>parses the query params that were sent with the request</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/action-controller/base.cr","line_number":182,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L182"},"def":{"name":"query_params","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@__context__.request.query_params(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"render_called:Bool-instance-method","name":"render_called","doc":"has the response already been sent?","summary":"<p>has the response already been sent?</p>\n<p><span class=\"flag red\">DEPRECATED</span>  use <code><a href=\"../ActionController/Base.html#render_called%3F%3ABool-instance-method\">#render_called?</a></code></p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":161,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L161"},"def":{"name":"render_called","visibility":"Public","body":"@__render_called__"}},{"html_id":"render_called?:Bool-instance-method","name":"render_called?","doc":"has the response already been sent?","summary":"<p>has the response already been sent?</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":155,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L155"},"def":{"name":"render_called?","return_type":"Bool","visibility":"Public","body":"@__render_called__"}},{"html_id":"request(*args,**options)-instance-method","name":"request","doc":"shortcuts to methods available on the context","summary":"<p>shortcuts to methods available on the context</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/action-controller/base.cr","line_number":179,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L179"},"def":{"name":"request","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@__context__.request(*args, **options)"}},{"html_id":"request(*args,**options,&)-instance-method","name":"request","doc":"shortcuts to methods available on the context","summary":"<p>shortcuts to methods available on the context</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/action-controller/base.cr","line_number":179,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L179"},"def":{"name":"request","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@__context__.request(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"request_charset:String-instance-method","name":"request_charset","doc":"looks at the content type header to see if the charset was defined","summary":"<p>looks at the content type header to see if the charset was defined</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":252,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L252"},"def":{"name":"request_charset","return_type":"String","visibility":"Public","body":"if (value = @request_charset).nil?\n  @request_charset = (request_media_type.try() do |__arg1|\n    __arg1[\"charset\"]?.try(&.downcase)\n  end || \"utf-8\")\nelse\n  value\nend"}},{"html_id":"request_content_type:String|Nil-instance-method","name":"request_content_type","doc":"looks at the content type header for the media type and returns the text representation of it","summary":"<p>looks at the content type header for the media type and returns the text representation of it</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":247,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L247"},"def":{"name":"request_content_type","return_type":"String | ::Nil","visibility":"Public","body":"request_media_type.try(&.media_type)"}},{"html_id":"request_media_type:MIME::MediaType|Nil-instance-method","name":"request_media_type","doc":"looks at the content type header for the media type","summary":"<p>looks at the content type header for the media type</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":242,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L242"},"def":{"name":"request_media_type","return_type":"MIME::MediaType | ::Nil","visibility":"Public","body":"if (value = @request_media_type).nil?\n  @request_media_type = (ActionController::Support.media_type(request.headers))\nelse\n  value\nend"}},{"html_id":"request_protocol-instance-method","name":"request_protocol","doc":"returns either `:http` or `:https`","summary":"<p>returns either <code>:http</code> or <code>:https</code></p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":793,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L793"},"def":{"name":"request_protocol","visibility":"Public","body":"ActionController::Support.request_protocol(request)"}},{"html_id":"response(*args,**options)-instance-method","name":"response","doc":"shortcuts to methods available on the context","summary":"<p>shortcuts to methods available on the context</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/action-controller/base.cr","line_number":179,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L179"},"def":{"name":"response","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@__context__.response(*args, **options)"}},{"html_id":"response(*args,**options,&)-instance-method","name":"response","doc":"shortcuts to methods available on the context","summary":"<p>shortcuts to methods available on the context</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/action-controller/base.cr","line_number":179,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L179"},"def":{"name":"response","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@__context__.response(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"route_params(*args,**options)-instance-method","name":"route_params","doc":"shortcuts to methods available on the context","summary":"<p>shortcuts to methods available on the context</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/action-controller/base.cr","line_number":179,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L179"},"def":{"name":"route_params","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@__context__.route_params(*args, **options)"}},{"html_id":"route_params(*args,**options,&)-instance-method","name":"route_params","doc":"shortcuts to methods available on the context","summary":"<p>shortcuts to methods available on the context</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/action-controller/base.cr","line_number":179,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L179"},"def":{"name":"route_params","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@__context__.route_params(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"session:Session-instance-method","name":"session","doc":"loads the session from the cookies if it exists","summary":"<p>loads the session from the cookies if it exists</p>","abstract":false,"location":{"filename":"src/action-controller/base.cr","line_number":166,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L166"},"def":{"name":"session","return_type":"Session","visibility":"Public","body":"@__session__ || (@__session__ = Session.from_cookies(cookies))"}}],"macros":[{"html_id":"after_action(method,only=nil,except=nil,filter_name=nil)-macro","name":"after_action","doc":"runs code after an action is executed and the response has been sent.\n\n```\n@[AC::Route::Filter(:after_action)]\ndef audit_user_activity\n  log_activity(session[\"user\"], request_protocol, action_name)\nend\n```","summary":"<p>runs code after an action is executed and the response has been sent.</p>","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"args_string":"(method, only = nil, except = nil, filter_name = nil)","args_html":"(method, only = <span class=\"n\">nil</span>, except = <span class=\"n\">nil</span>, filter_name = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":768,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L768"},"def":{"name":"after_action","args":[{"name":"method","external_name":"method","restriction":""},{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"visibility":"Public","body":"    \n      \n{% method = method.id %}\n\n    \n      \n{% prev_only = nil %}\n\n      \n{% prev_except = nil %}\n\n      \n{% if existing = LOCAL_AFTER[method] %}\n        {% prev_only = existing[0] %}\n        {% prev_except = existing[1] %}\n      {% end %}\n\n      \n{% if only %}\n        {% if !only.is_a?(ArrayLiteral) %}\n          {% only = prev_only ? prev_only + [only.id] : [only.id] %}\n        {% else %}\n          {% only = prev_only ? prev_only + only.map(&.id) : only.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% only = prev_only %}\n      {% end %}\n\n      \n{% if except %}\n        {% if !except.is_a?(ArrayLiteral) %}\n          {% except = prev_except ? prev_except + [except.id] : [except.id] %}\n        {% else %}\n          {% except = prev_except ? prev_except + except.map(&.id) : except.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% except = prev_except %}\n      {% end %}\n\n      \n{% if filter_name %}\n      {% else %}\n        {% filter_name = method %}\n      {% end %}\n\n      \n{% LOCAL_AFTER[method] = {only, except, filter_name} %}\n\n    \n"}},{"html_id":"around_action(method,only=nil,except=nil,filter_name=nil)-macro","name":"around_action","doc":"wraps actions in the code provided, must `yield` to the action\n\n```\n@[AC::Route::Filter(:around_action, only: [:create, :update])]\ndef wrap_in_transaction\n  PgORM::Database.transaction do\n    yield\n  end\nend\n```","summary":"<p>wraps actions in the code provided, must <code>yield</code> to the action</p>","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"args_string":"(method, only = nil, except = nil, filter_name = nil)","args_html":"(method, only = <span class=\"n\">nil</span>, except = <span class=\"n\">nil</span>, filter_name = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":748,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L748"},"def":{"name":"around_action","args":[{"name":"method","external_name":"method","restriction":""},{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"visibility":"Public","body":"    \n      \n{% method = method.id %}\n\n    \n      \n{% prev_only = nil %}\n\n      \n{% prev_except = nil %}\n\n      \n{% if existing = LOCAL_AROUND[method] %}\n        {% prev_only = existing[0] %}\n        {% prev_except = existing[1] %}\n      {% end %}\n\n      \n{% if only %}\n        {% if !only.is_a?(ArrayLiteral) %}\n          {% only = prev_only ? prev_only + [only.id] : [only.id] %}\n        {% else %}\n          {% only = prev_only ? prev_only + only.map(&.id) : only.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% only = prev_only %}\n      {% end %}\n\n      \n{% if except %}\n        {% if !except.is_a?(ArrayLiteral) %}\n          {% except = prev_except ? prev_except + [except.id] : [except.id] %}\n        {% else %}\n          {% except = prev_except ? prev_except + except.map(&.id) : except.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% except = prev_except %}\n      {% end %}\n\n      \n{% if filter_name %}\n      {% else %}\n        {% filter_name = method %}\n      {% end %}\n\n      \n{% LOCAL_AROUND[method] = {only, except, filter_name} %}\n\n    \n"}},{"html_id":"base(name=nil)-macro","name":"base","doc":"this route is appended to any routes defined in the controller\n\ndefaults to `/`","summary":"<p>this route is appended to any routes defined in the controller</p>","abstract":false,"args":[{"name":"name","default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = nil)","args_html":"(name = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":635,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L635"},"def":{"name":"base","args":[{"name":"name","default_value":"nil","external_name":"name","restriction":""}],"visibility":"Public","body":"    \n{% if ((name == nil) || name.empty?) || (name == \"/\") %}\n      {% NAMESPACE[0] = \"/\" %}\n    {% else %}\n      {% if name.id.stringify.starts_with?(\"/\") %}\n        {% NAMESPACE[0] = name.id.stringify %}\n      {% else %}\n        {% NAMESPACE[0] = \"/\" + name.id.stringify %}\n      {% end %}\n    {% end %}\n\n  \n"}},{"html_id":"before_action(method,only=nil,except=nil,filter_name=nil)-macro","name":"before_action","doc":"runs code before an action is executed\n\n```\n@[AC::Route::Filter(:before_action, except: [:public_show])]\ndef ensure_authenticated\n  raise Error::Unauthorized.new(\"user not found\") unless session[\"user\"]?\nend\n```","summary":"<p>runs code before an action is executed</p>","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"args_string":"(method, only = nil, except = nil, filter_name = nil)","args_html":"(method, only = <span class=\"n\">nil</span>, except = <span class=\"n\">nil</span>, filter_name = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":758,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L758"},"def":{"name":"before_action","args":[{"name":"method","external_name":"method","restriction":""},{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"visibility":"Public","body":"    \n      \n{% method = method.id %}\n\n    \n      \n{% prev_only = nil %}\n\n      \n{% prev_except = nil %}\n\n      \n{% if existing = LOCAL_BEFORE[method] %}\n        {% prev_only = existing[0] %}\n        {% prev_except = existing[1] %}\n      {% end %}\n\n      \n{% if only %}\n        {% if !only.is_a?(ArrayLiteral) %}\n          {% only = prev_only ? prev_only + [only.id] : [only.id] %}\n        {% else %}\n          {% only = prev_only ? prev_only + only.map(&.id) : only.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% only = prev_only %}\n      {% end %}\n\n      \n{% if except %}\n        {% if !except.is_a?(ArrayLiteral) %}\n          {% except = prev_except ? prev_except + [except.id] : [except.id] %}\n        {% else %}\n          {% except = prev_except ? prev_except + except.map(&.id) : except.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% except = prev_except %}\n      {% end %}\n\n      \n{% if filter_name %}\n      {% else %}\n        {% filter_name = method %}\n      {% end %}\n\n      \n{% LOCAL_BEFORE[method] = {only, except, filter_name} %}\n\n    \n"}},{"html_id":"delete(path,function=nil,annotations=nil,reference=nil,&block)-macro","name":"delete","doc":"define a new route that responds to DELETE requests","summary":"<p>define a new route that responds to DELETE requests</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"args_string":"(path, function = nil, annotations = nil, reference = nil, &block)","args_html":"(path, function = <span class=\"n\">nil</span>, annotations = <span class=\"n\">nil</span>, reference = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/action-controller/base.cr","line_number":648,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L648"},"def":{"name":"delete","args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% if function %}{% else %}\n        {% function = (\"_route_\" + \"delete\") + (path.gsub(/\\W/, \"_\")) %}\n      {% end %}\n\n      \n{% LOCAL_ROUTES[\"delete\" + path] = {\"delete\", path, annotations, block, false, (reference || function).id, function.id} %}\n\n      \n{% if annotations %}\n        {% unless annotations.is_a?(ArrayLiteral)\n  annotations = [annotations]\nend %}\n        {% for ann in annotations %}\n          {{ ann.id }}\n        {% end %}\n      {% end %}\n\n      \n{{ ((\"def \" + function.id.stringify) + \"(\").id }}\n\n        \n{{ *block.args }}\n\n      \n{{ \")\".id }}\n\n        \n{{ block.body }}\n\n      \n{{ \"end\".id }}\n\n    \n"}},{"html_id":"force_ssl(only=nil,except=nil,filter_name=nil)-macro","name":"force_ssl","doc":"ensures certain routes can only be accessed over TLS\n\nrecommended that this is enabled for your entire application","summary":"<p>ensures certain routes can only be accessed over TLS</p>","abstract":false,"args":[{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"args_string":"(only = nil, except = nil, filter_name = nil)","args_html":"(only = <span class=\"n\">nil</span>, except = <span class=\"n\">nil</span>, filter_name = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":781,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L781"},"def":{"name":"force_ssl","args":[{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"visibility":"Public","body":"    \n      \n{% method = :force %}\n\n    \n      \n{% prev_only = nil %}\n\n      \n{% prev_except = nil %}\n\n      \n{% if existing = LOCAL_FORCE[method] %}\n        {% prev_only = existing[0] %}\n        {% prev_except = existing[1] %}\n      {% end %}\n\n      \n{% if only %}\n        {% if !only.is_a?(ArrayLiteral) %}\n          {% only = prev_only ? prev_only + [only.id] : [only.id] %}\n        {% else %}\n          {% only = prev_only ? prev_only + only.map(&.id) : only.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% only = prev_only %}\n      {% end %}\n\n      \n{% if except %}\n        {% if !except.is_a?(ArrayLiteral) %}\n          {% except = prev_except ? prev_except + [except.id] : [except.id] %}\n        {% else %}\n          {% except = prev_except ? prev_except + except.map(&.id) : except.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% except = prev_except %}\n      {% end %}\n\n      \n{% if filter_name %}\n      {% else %}\n        {% filter_name = method %}\n      {% end %}\n\n      \n{% LOCAL_FORCE[method] = {only, except, filter_name} %}\n\n    \n"}},{"html_id":"force_tls(only=nil,except=nil)-macro","name":"force_tls","doc":"ensures certain routes can only be accessed over TLS\n\nrecommended that this is enabled for your entire application","summary":"<p>ensures certain routes can only be accessed over TLS</p>","abstract":false,"args":[{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""}],"args_string":"(only = nil, except = nil)","args_html":"(only = <span class=\"n\">nil</span>, except = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":784,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L784"},"def":{"name":"force_tls","args":[{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""}],"visibility":"Public","body":"    force_ssl(\n{{ only }}\n, \n{{ except }}\n)\n  \n"}},{"html_id":"get(path,function=nil,annotations=nil,reference=nil,&block)-macro","name":"get","doc":"define a new route that responds to GET requests","summary":"<p>define a new route that responds to GET requests</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"args_string":"(path, function = nil, annotations = nil, reference = nil, &block)","args_html":"(path, function = <span class=\"n\">nil</span>, annotations = <span class=\"n\">nil</span>, reference = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/action-controller/base.cr","line_number":648,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L648"},"def":{"name":"get","args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% if function %}{% else %}\n        {% function = (\"_route_\" + \"get\") + (path.gsub(/\\W/, \"_\")) %}\n      {% end %}\n\n      \n{% LOCAL_ROUTES[\"get\" + path] = {\"get\", path, annotations, block, false, (reference || function).id, function.id} %}\n\n      \n{% if annotations %}\n        {% unless annotations.is_a?(ArrayLiteral)\n  annotations = [annotations]\nend %}\n        {% for ann in annotations %}\n          {{ ann.id }}\n        {% end %}\n      {% end %}\n\n      \n{{ ((\"def \" + function.id.stringify) + \"(\").id }}\n\n        \n{{ *block.args }}\n\n      \n{{ \")\".id }}\n\n        \n{{ block.body }}\n\n      \n{{ \"end\".id }}\n\n    \n"}},{"html_id":"layout(filename=nil)-macro","name":"layout","abstract":false,"args":[{"name":"filename","default_value":"nil","external_name":"filename","restriction":""}],"args_string":"(filename = nil)","args_html":"(filename = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":30,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L30"},"def":{"name":"layout","args":[{"name":"filename","default_value":"nil","external_name":"filename","restriction":""}],"visibility":"Public","body":"    \n{% if (filename == nil) || filename.empty? %}\n      {% TEMPLATE_LAYOUT[@type.id] = nil %}\n    {% else %}\n      {% TEMPLATE_LAYOUT[@type.id] = filename %}\n    {% end %}\n\n  \n"}},{"html_id":"options(path,function=nil,annotations=nil,reference=nil,&block)-macro","name":"options","doc":"define a new route that responds to OPTIONS requests","summary":"<p>define a new route that responds to OPTIONS requests</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"args_string":"(path, function = nil, annotations = nil, reference = nil, &block)","args_html":"(path, function = <span class=\"n\">nil</span>, annotations = <span class=\"n\">nil</span>, reference = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/action-controller/base.cr","line_number":648,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L648"},"def":{"name":"options","args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% if function %}{% else %}\n        {% function = (\"_route_\" + \"options\") + (path.gsub(/\\W/, \"_\")) %}\n      {% end %}\n\n      \n{% LOCAL_ROUTES[\"options\" + path] = {\"options\", path, annotations, block, false, (reference || function).id, function.id} %}\n\n      \n{% if annotations %}\n        {% unless annotations.is_a?(ArrayLiteral)\n  annotations = [annotations]\nend %}\n        {% for ann in annotations %}\n          {{ ann.id }}\n        {% end %}\n      {% end %}\n\n      \n{{ ((\"def \" + function.id.stringify) + \"(\").id }}\n\n        \n{{ *block.args }}\n\n      \n{{ \")\".id }}\n\n        \n{{ block.body }}\n\n      \n{{ \"end\".id }}\n\n    \n"}},{"html_id":"partial(partial,io=nil)-macro","name":"partial","abstract":false,"args":[{"name":"partial","external_name":"partial","restriction":""},{"name":"io","default_value":"nil","external_name":"io","restriction":""}],"args_string":"(partial, io = nil)","args_html":"(partial, io = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":77,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L77"},"def":{"name":"partial","args":[{"name":"partial","external_name":"partial","restriction":""},{"name":"io","default_value":"nil","external_name":"io","restriction":""}],"visibility":"Public","body":"    \n{% if io %}\n      template(partial: {{ partial }}, io: {{ io }})\n    {% else %}\n      template(partial: {{ partial }})\n    {% end %}\n\n  \n"}},{"html_id":"patch(path,function=nil,annotations=nil,reference=nil,&block)-macro","name":"patch","doc":"define a new route that responds to PATCH requests","summary":"<p>define a new route that responds to PATCH requests</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"args_string":"(path, function = nil, annotations = nil, reference = nil, &block)","args_html":"(path, function = <span class=\"n\">nil</span>, annotations = <span class=\"n\">nil</span>, reference = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/action-controller/base.cr","line_number":648,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L648"},"def":{"name":"patch","args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% if function %}{% else %}\n        {% function = (\"_route_\" + \"patch\") + (path.gsub(/\\W/, \"_\")) %}\n      {% end %}\n\n      \n{% LOCAL_ROUTES[\"patch\" + path] = {\"patch\", path, annotations, block, false, (reference || function).id, function.id} %}\n\n      \n{% if annotations %}\n        {% unless annotations.is_a?(ArrayLiteral)\n  annotations = [annotations]\nend %}\n        {% for ann in annotations %}\n          {{ ann.id }}\n        {% end %}\n      {% end %}\n\n      \n{{ ((\"def \" + function.id.stringify) + \"(\").id }}\n\n        \n{{ *block.args }}\n\n      \n{{ \")\".id }}\n\n        \n{{ block.body }}\n\n      \n{{ \"end\".id }}\n\n    \n"}},{"html_id":"post(path,function=nil,annotations=nil,reference=nil,&block)-macro","name":"post","doc":"define a new route that responds to POST requests","summary":"<p>define a new route that responds to POST requests</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"args_string":"(path, function = nil, annotations = nil, reference = nil, &block)","args_html":"(path, function = <span class=\"n\">nil</span>, annotations = <span class=\"n\">nil</span>, reference = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/action-controller/base.cr","line_number":648,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L648"},"def":{"name":"post","args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% if function %}{% else %}\n        {% function = (\"_route_\" + \"post\") + (path.gsub(/\\W/, \"_\")) %}\n      {% end %}\n\n      \n{% LOCAL_ROUTES[\"post\" + path] = {\"post\", path, annotations, block, false, (reference || function).id, function.id} %}\n\n      \n{% if annotations %}\n        {% unless annotations.is_a?(ArrayLiteral)\n  annotations = [annotations]\nend %}\n        {% for ann in annotations %}\n          {{ ann.id }}\n        {% end %}\n      {% end %}\n\n      \n{{ ((\"def \" + function.id.stringify) + \"(\").id }}\n\n        \n{{ *block.args }}\n\n      \n{{ \")\".id }}\n\n        \n{{ block.body }}\n\n      \n{{ \"end\".id }}\n\n    \n"}},{"html_id":"put(path,function=nil,annotations=nil,reference=nil,&block)-macro","name":"put","doc":"define a new route that responds to PUT requests","summary":"<p>define a new route that responds to PUT requests</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"args_string":"(path, function = nil, annotations = nil, reference = nil, &block)","args_html":"(path, function = <span class=\"n\">nil</span>, annotations = <span class=\"n\">nil</span>, reference = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/action-controller/base.cr","line_number":648,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L648"},"def":{"name":"put","args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% if function %}{% else %}\n        {% function = (\"_route_\" + \"put\") + (path.gsub(/\\W/, \"_\")) %}\n      {% end %}\n\n      \n{% LOCAL_ROUTES[\"put\" + path] = {\"put\", path, annotations, block, false, (reference || function).id, function.id} %}\n\n      \n{% if annotations %}\n        {% unless annotations.is_a?(ArrayLiteral)\n  annotations = [annotations]\nend %}\n        {% for ann in annotations %}\n          {{ ann.id }}\n        {% end %}\n      {% end %}\n\n      \n{{ ((\"def \" + function.id.stringify) + \"(\").id }}\n\n        \n{{ *block.args }}\n\n      \n{{ \")\".id }}\n\n        \n{{ block.body }}\n\n      \n{{ \"end\".id }}\n\n    \n"}},{"html_id":"rescue_from(error_class,method=nil,&block)-macro","name":"rescue_from","doc":"provide custom responses for certain types of errors that might occur in multiple routes\n\nhelps keep your code DRY and simplifies controller methods","summary":"<p>provide custom responses for certain types of errors that might occur in multiple routes</p>","abstract":false,"args":[{"name":"error_class","external_name":"error_class","restriction":""},{"name":"method","default_value":"nil","external_name":"method","restriction":""}],"args_string":"(error_class, method = nil, &block)","args_html":"(error_class, method = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/action-controller/base.cr","line_number":689,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L689"},"def":{"name":"rescue_from","args":[{"name":"error_class","external_name":"error_class","restriction":""},{"name":"method","default_value":"nil","external_name":"method","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if method %}\n      {% LOCAL_RESCUE[error_class] = {method.id, nil} %}\n    {% else %}\n      {% method = error_class.stringify.underscore.gsub(/\\:\\:/, \"_\") %}\n      {% LOCAL_RESCUE[error_class] = {method.id, block} %}\n    {% end %}\n\n  \n"}},{"html_id":"skip_action(method,only=nil,except=nil,filter_name=nil)-macro","name":"skip_action","doc":"provides a method for skipping filters that were defined in parent classes.\n\nfor instance, you might have a global authorisation check, however one route is less strict\n```\nskip_action :authorize!, only: [:public_show]\n```","summary":"<p>provides a method for skipping filters that were defined in parent classes.</p>","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"args_string":"(method, only = nil, except = nil, filter_name = nil)","args_html":"(method, only = <span class=\"n\">nil</span>, except = <span class=\"n\">nil</span>, filter_name = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":776,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L776"},"def":{"name":"skip_action","args":[{"name":"method","external_name":"method","restriction":""},{"name":"only","default_value":"nil","external_name":"only","restriction":""},{"name":"except","default_value":"nil","external_name":"except","restriction":""},{"name":"filter_name","default_value":"nil","external_name":"filter_name","restriction":""}],"visibility":"Public","body":"    \n      \n{% method = method.id %}\n\n    \n      \n{% prev_only = nil %}\n\n      \n{% prev_except = nil %}\n\n      \n{% if existing = LOCAL_SKIP[method] %}\n        {% prev_only = existing[0] %}\n        {% prev_except = existing[1] %}\n      {% end %}\n\n      \n{% if only %}\n        {% if !only.is_a?(ArrayLiteral) %}\n          {% only = prev_only ? prev_only + [only.id] : [only.id] %}\n        {% else %}\n          {% only = prev_only ? prev_only + only.map(&.id) : only.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% only = prev_only %}\n      {% end %}\n\n      \n{% if except %}\n        {% if !except.is_a?(ArrayLiteral) %}\n          {% except = prev_except ? prev_except + [except.id] : [except.id] %}\n        {% else %}\n          {% except = prev_except ? prev_except + except.map(&.id) : except.map(&.id) %}\n        {% end %}\n      {% else %}\n        {% except = prev_except %}\n      {% end %}\n\n      \n{% if filter_name %}\n      {% else %}\n        {% filter_name = method %}\n      {% end %}\n\n      \n{% LOCAL_SKIP[method] = {only, except, filter_name} %}\n\n    \n"}},{"html_id":"template(template=nil,partial=nil,layout=nil,io=nil)-macro","name":"template","abstract":false,"args":[{"name":"template","default_value":"nil","external_name":"template","restriction":""},{"name":"partial","default_value":"nil","external_name":"partial","restriction":""},{"name":"layout","default_value":"nil","external_name":"layout","restriction":""},{"name":"io","default_value":"nil","external_name":"io","restriction":""}],"args_string":"(template = nil, partial = nil, layout = nil, io = nil)","args_html":"(template = <span class=\"n\">nil</span>, partial = <span class=\"n\">nil</span>, layout = <span class=\"n\">nil</span>, io = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/base.cr","line_number":46,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L46"},"def":{"name":"template","args":[{"name":"template","default_value":"nil","external_name":"template","restriction":""},{"name":"partial","default_value":"nil","external_name":"partial","restriction":""},{"name":"layout","default_value":"nil","external_name":"layout","restriction":""},{"name":"io","default_value":"nil","external_name":"io","restriction":""}],"visibility":"Public","body":"    \n{% if !(template || partial) %}\n      {% raise(\"template or partial required!\") %}\n    {% else %}\n      {% filename = partial || template %}\n      {% layout = layout || TEMPLATE_LAYOUT[@type.id] %}\n\n      {% if (partial || (!layout)) && io %}\n        %content = render_template({{ filename }}, {{ io }})\n      {% else %}\n        %content = render_template({{ filename }})\n      {% end %}\n\n      {% if !partial %}\n        {% if layout %}\n          {% if io %}\n            content = %content\n            render_template({{ layout }}, {{ io }})\n          {% else %}\n            content = %content\n            render_template({{ layout }})\n          {% end %}\n        {% else %}\n          %content\n        {% end %}\n      {% else %}\n        %content\n      {% end %}\n    {% end %}\n\n  \n"}},{"html_id":"template_path(path)-macro","name":"template_path","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/action-controller/base.cr","line_number":38,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L38"},"def":{"name":"template_path","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"    \n{% if path.id.ends_with?(\"/\") %}\n      {% TEMPLATE_PATH[@type.id] = path %}\n    {% else %}\n      {% TEMPLATE_PATH[@type.id] = path + \"/\" %}\n    {% end %}\n\n  \n"}},{"html_id":"ws(path,function=nil,annotations=nil,reference=nil,&block)-macro","name":"ws","doc":"used to define a websocket route","summary":"<p>used to define a websocket route</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"args_string":"(path, function = nil, annotations = nil, reference = nil, &block)","args_html":"(path, function = <span class=\"n\">nil</span>, annotations = <span class=\"n\">nil</span>, reference = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/action-controller/base.cr","line_number":670,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/base.cr#L670"},"def":{"name":"ws","args":[{"name":"path","external_name":"path","restriction":""},{"name":"function","default_value":"nil","external_name":"function","restriction":""},{"name":"annotations","default_value":"nil","external_name":"annotations","restriction":""},{"name":"reference","default_value":"nil","external_name":"reference","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if function %}{% else %}\n      {% function = \"ws\" + (path.gsub(/\\W/, \"_\")) %}\n    {% end %}\n\n    \n{% LOCAL_ROUTES[\"ws\" + path] = {\"get\", path, annotations, block, true, (reference || function).id, function.id} %}\n\n    \n{% if annotations %} #\n      {% unless annotations.is_a?(ArrayLiteral)\n  annotations = [annotations]\nend %}\n      {% for ann in annotations %}\n        {{ ann.id }}\n      {% end %}\n    {% end %}\n\n    def \n{{ function.id }}\n(\n{{ *block.args }}\n)\n      \n{{ block.body }}\n\n    \nend\n  \n"}}]},{"html_id":"action-controller/ActionController/CookieSizeExceeded","path":"ActionController/CookieSizeExceeded.html","kind":"class","full_name":"ActionController::CookieSizeExceeded","name":"CookieSizeExceeded","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":63,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L63"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"doc":"raised if Session::MAX_COOKIE_SIZE is exceeded by a cookie","summary":"<p>raised if Session::MAX_COOKIE_SIZE is exceeded by a cookie</p>"},{"html_id":"action-controller/ActionController/Error","path":"ActionController/Error.html","kind":"class","full_name":"ActionController::Error","name":"Error","abstract":false,"superclass":{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L5"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"action-controller/ActionController/CookieSizeExceeded","kind":"class","full_name":"ActionController::CookieSizeExceeded","name":"CookieSizeExceeded"},{"html_id":"action-controller/ActionController/Error/Conflict","kind":"class","full_name":"ActionController::Error::Conflict","name":"Conflict"},{"html_id":"action-controller/ActionController/Error/Forbidden","kind":"class","full_name":"ActionController::Error::Forbidden","name":"Forbidden"},{"html_id":"action-controller/ActionController/Error/NotFound","kind":"class","full_name":"ActionController::Error::NotFound","name":"NotFound"},{"html_id":"action-controller/ActionController/Error/Unauthorized","kind":"class","full_name":"ActionController::Error::Unauthorized","name":"Unauthorized"},{"html_id":"action-controller/ActionController/InvalidRoute","kind":"class","full_name":"ActionController::InvalidRoute","name":"InvalidRoute"},{"html_id":"action-controller/ActionController/InvalidSignature","kind":"class","full_name":"ActionController::InvalidSignature","name":"InvalidSignature"}],"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"doc":"a series of common errors and rendering helpers for use in your applications","summary":"<p>a series of common errors and rendering helpers for use in your applications</p>","types":[{"html_id":"action-controller/ActionController/Error/CommonResponse","path":"ActionController/Error/CommonResponse.html","kind":"struct","full_name":"ActionController::Error::CommonResponse","name":"CommonResponse","abstract":false,"superclass":{"html_id":"action-controller/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"action-controller/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"action-controller/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"action-controller/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"action-controller/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":23,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L23"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"action-controller/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"action-controller/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"action-controller/JSON/Schema","kind":"module","full_name":"JSON::Schema","name":"Schema"}],"namespace":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"doc":"provides a response object for rendering errors","summary":"<p>provides a response object for rendering errors</p>","constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/action-controller/errors.cr","line_number":25,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L25"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/action-controller/errors.cr","line_number":24,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L24"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(error,backtrace=true)-class-method","name":"new","abstract":false,"args":[{"name":"error","external_name":"error","restriction":""},{"name":"backtrace","default_value":"true","external_name":"backtrace","restriction":""}],"args_string":"(error, backtrace = true)","args_html":"(error, backtrace = <span class=\"n\">true</span>)","location":{"filename":"src/action-controller/errors.cr","line_number":30,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L30"},"def":{"name":"new","args":[{"name":"error","external_name":"error","restriction":""},{"name":"backtrace","default_value":"true","external_name":"backtrace","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(error, backtrace)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"backtrace:Array(String)|Nil-instance-method","name":"backtrace","abstract":false,"location":{"filename":"src/action-controller/errors.cr","line_number":28,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L28"},"def":{"name":"backtrace","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@backtrace"}},{"html_id":"error:String|Nil-instance-method","name":"error","abstract":false,"location":{"filename":"src/action-controller/errors.cr","line_number":27,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L27"},"def":{"name":"error","return_type":"String | ::Nil","visibility":"Public","body":"@error"}}]},{"html_id":"action-controller/ActionController/Error/Conflict","path":"ActionController/Error/Conflict.html","kind":"class","full_name":"ActionController::Error::Conflict","name":"Conflict","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":19,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L19"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"doc":"provided for use in your applications","summary":"<p>provided for use in your applications</p>"},{"html_id":"action-controller/ActionController/Error/ContentResponse","path":"ActionController/Error/ContentResponse.html","kind":"struct","full_name":"ActionController::Error::ContentResponse","name":"ContentResponse","abstract":false,"superclass":{"html_id":"action-controller/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"action-controller/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"action-controller/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"action-controller/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"action-controller/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":37,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L37"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"action-controller/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"action-controller/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"action-controller/JSON/Schema","kind":"module","full_name":"JSON::Schema","name":"Schema"}],"namespace":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"doc":"Provides details on available data formats","summary":"<p>Provides details on available data formats</p>","constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/action-controller/errors.cr","line_number":39,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L39"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/action-controller/errors.cr","line_number":38,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L38"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(error:String,accepts:Nil|Array(String)=nil)-class-method","name":"new","abstract":false,"args":[{"name":"error","external_name":"error","restriction":"::String"},{"name":"accepts","default_value":"nil","external_name":"accepts","restriction":"::Nil | ::Array(::String)"}],"args_string":"(error : String, accepts : Nil | Array(String) = nil)","args_html":"(error : String, accepts : Nil | Array(String) = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/errors.cr","line_number":44,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L44"},"def":{"name":"new","args":[{"name":"error","external_name":"error","restriction":"::String"},{"name":"accepts","default_value":"nil","external_name":"accepts","restriction":"::Nil | ::Array(::String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(error, accepts)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"accepts:Array(String)|Nil-instance-method","name":"accepts","abstract":false,"location":{"filename":"src/action-controller/errors.cr","line_number":42,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L42"},"def":{"name":"accepts","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@accepts"}},{"html_id":"error:String-instance-method","name":"error","abstract":false,"location":{"filename":"src/action-controller/errors.cr","line_number":41,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L41"},"def":{"name":"error","return_type":"String","visibility":"Public","body":"@error"}}]},{"html_id":"action-controller/ActionController/Error/Forbidden","path":"ActionController/Error/Forbidden.html","kind":"class","full_name":"ActionController::Error::Forbidden","name":"Forbidden","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":11,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L11"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"doc":"provided for use in your applications","summary":"<p>provided for use in your applications</p>"},{"html_id":"action-controller/ActionController/Error/NotFound","path":"ActionController/Error/NotFound.html","kind":"class","full_name":"ActionController::Error::NotFound","name":"NotFound","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":15,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L15"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"doc":"provided for use in your applications","summary":"<p>provided for use in your applications</p>"},{"html_id":"action-controller/ActionController/Error/ParameterResponse","path":"ActionController/Error/ParameterResponse.html","kind":"struct","full_name":"ActionController::Error::ParameterResponse","name":"ParameterResponse","abstract":false,"superclass":{"html_id":"action-controller/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"action-controller/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"action-controller/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"action-controller/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"action-controller/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":49,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L49"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"action-controller/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"action-controller/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"action-controller/JSON/Schema","kind":"module","full_name":"JSON::Schema","name":"Schema"}],"namespace":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"doc":"Provides details on which parameter is missing or invalid","summary":"<p>Provides details on which parameter is missing or invalid</p>","constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/action-controller/errors.cr","line_number":51,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L51"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/action-controller/errors.cr","line_number":50,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L50"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(error:String,parameter:Nil|String=nil,restriction:Nil|String=nil)-class-method","name":"new","abstract":false,"args":[{"name":"error","external_name":"error","restriction":"::String"},{"name":"parameter","default_value":"nil","external_name":"parameter","restriction":"::Nil | ::String"},{"name":"restriction","default_value":"nil","external_name":"restriction","restriction":"::Nil | ::String"}],"args_string":"(error : String, parameter : Nil | String = nil, restriction : Nil | String = nil)","args_html":"(error : String, parameter : Nil | String = <span class=\"n\">nil</span>, restriction : Nil | String = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/errors.cr","line_number":57,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L57"},"def":{"name":"new","args":[{"name":"error","external_name":"error","restriction":"::String"},{"name":"parameter","default_value":"nil","external_name":"parameter","restriction":"::Nil | ::String"},{"name":"restriction","default_value":"nil","external_name":"restriction","restriction":"::Nil | ::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(error, parameter, restriction)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"error:String-instance-method","name":"error","abstract":false,"location":{"filename":"src/action-controller/errors.cr","line_number":53,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L53"},"def":{"name":"error","return_type":"String","visibility":"Public","body":"@error"}},{"html_id":"parameter:String|Nil-instance-method","name":"parameter","abstract":false,"location":{"filename":"src/action-controller/errors.cr","line_number":54,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L54"},"def":{"name":"parameter","return_type":"String | ::Nil","visibility":"Public","body":"@parameter"}},{"html_id":"restriction:String|Nil-instance-method","name":"restriction","abstract":false,"location":{"filename":"src/action-controller/errors.cr","line_number":55,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L55"},"def":{"name":"restriction","return_type":"String | ::Nil","visibility":"Public","body":"@restriction"}}]},{"html_id":"action-controller/ActionController/Error/Unauthorized","path":"ActionController/Error/Unauthorized.html","kind":"class","full_name":"ActionController::Error::Unauthorized","name":"Unauthorized","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":7,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L7"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"doc":"provided for use in your applications","summary":"<p>provided for use in your applications</p>"}]},{"html_id":"action-controller/ActionController/InvalidRoute","path":"ActionController/InvalidRoute.html","kind":"class","full_name":"ActionController::InvalidRoute","name":"InvalidRoute","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":71,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L71"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"doc":"raised if a required route parameter is missing","summary":"<p>raised if a required route parameter is missing</p>"},{"html_id":"action-controller/ActionController/InvalidSignature","path":"ActionController/InvalidSignature.html","kind":"class","full_name":"ActionController::InvalidSignature","name":"InvalidSignature","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Error","kind":"class","full_name":"ActionController::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/errors.cr","line_number":67,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/errors.cr#L67"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"doc":"the signature of the cookie session is invalid, the cookie may have been tampered with","summary":"<p>the signature of the cookie session is invalid, the cookie may have been tampered with</p>"},{"html_id":"action-controller/ActionController/OpenAPI","path":"ActionController/OpenAPI.html","kind":"module","full_name":"ActionController::OpenAPI","name":"OpenAPI","abstract":false,"locations":[{"filename":"src/action-controller/open_api.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/open_api.cr#L5"},{"filename":"src/action-controller/open_api/components.cr","line_number":2,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/open_api/components.cr#L2"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"action-controller/ActionController/OpenAPI","kind":"module","full_name":"ActionController::OpenAPI","name":"OpenAPI"}],"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"instance_methods":[{"html_id":"generate_open_api_docs(title:String,version:String,**info)-instance-method","name":"generate_open_api_docs","doc":"returns a NamedTuple that represents the OpenAPI docs for the current application.\n\nthe info hash splat accepts any of the keys from the [info object](https://swagger.io/specification/#info-object)","summary":"<p>returns a NamedTuple that represents the OpenAPI docs for the current application.</p>","abstract":false,"args":[{"name":"title","external_name":"title","restriction":"String"},{"name":"version","external_name":"version","restriction":"String"}],"args_string":"(title : String, version : String, **info)","args_html":"(title : String, version : String, **info)","location":{"filename":"src/action-controller/open_api.cr","line_number":177,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/open_api.cr#L177"},"def":{"name":"generate_open_api_docs","args":[{"name":"title","external_name":"title","restriction":"String"},{"name":"version","external_name":"version","restriction":"String"}],"double_splat":{"name":"info","external_name":"info","restriction":""},"visibility":"Public","body":"descriptions = extract_route_descriptions\nresponse_types = {} of String => String\nroute_response = Hash(String, Hash(Tuple(Bool, String), Int32)).new do |hash, key|\n  hash[key] = {} of Tuple(Bool, String) => Int32\nend\nfilters = {} of String => Filter\nexceptions = {} of String => ExceptionHandler\nroutes = {} of String => RouteDetails\naccepts = [\"application/json\"]\nresponders = [\"application/json\"]\ngenerate_openapi_doc(title, version, info, descriptions, routes, exceptions, filters, response_types, accepts, responders)\n"}}]},{"html_id":"action-controller/ActionController/Param","path":"ActionController/Param.html","kind":"module","full_name":"ActionController::Param","name":"Param","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":78,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L78"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"types":[{"html_id":"action-controller/ActionController/Param/Converter","path":"ActionController/Param/Converter.html","kind":"annotation","full_name":"ActionController::Param::Converter","name":"Converter","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":78,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L78"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Param","kind":"module","full_name":"ActionController::Param","name":"Param"},"doc":"defines a custom parser for strong parameters\n\n```\n# for converting comma seperated lists\n# i.e. `\"id-1,id-2,id-3\"`\nstruct ConvertStringArray\n  def convert(raw : String)\n    raw.split(',').map!(&.strip).reject(&.empty?).uniq!\n  end\nend\n\n@[AC::Route::GET(\"/\", converters: {tags: ConvertStringArray})]\ndef find_tagged(tags : Array(String))\n  # ...\nend\n```","summary":"<p>defines a custom parser for strong parameters</p>"},{"html_id":"action-controller/ActionController/Param/Info","path":"ActionController/Param/Info.html","kind":"alias","full_name":"ActionController::Param::Info","name":"Info","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":82,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L82"}],"repository_name":"action-controller","program":false,"enum":false,"alias":true,"aliased":"ActionController::Param::Converter","aliased_html":"<a href=\"../../ActionController/Param/Converter.html\">ActionController::Param::Converter</a>","const":false,"namespace":{"html_id":"action-controller/ActionController/Param","kind":"module","full_name":"ActionController::Param","name":"Param"},"doc":"See Param::Converter in the alias definition","summary":"<p>See Param::Converter in the alias definition</p>"}]},{"html_id":"action-controller/ActionController/Responders","path":"ActionController/Responders.html","kind":"module","full_name":"ActionController::Responders","name":"Responders","abstract":false,"locations":[{"filename":"src/action-controller/responders.cr","line_number":4,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/responders.cr#L4"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MIME_TYPES","name":"MIME_TYPES","value":"{binary: \"application/octet-stream\", json: \"application/json\", xml: \"application/xml\", text: \"text/plain\", html: \"text/html\", yaml: \"text/yaml\"}","doc":"common response mime types","summary":"<p>common response mime types</p>"},{"id":"REDIRECTION_CODES","name":"REDIRECTION_CODES","value":"{multiple_choices: 300, moved_permanently: 301, found: 302, see_other: 303, not_modified: 304, use_proxy: 305, temporary_redirect: 307, permanent_redirect: 308}","doc":"codes to use when redirecting","summary":"<p>codes to use when redirecting</p>"},{"id":"STATUS_CODES","name":"STATUS_CODES","value":"{continue: 100, switching_protocols: 101, processing: 102, ok: 200, created: 201, accepted: 202, non_authoritative_information: 203, no_content: 204, reset_content: 205, partial_content: 206, multi_status: 207, already_reported: 208, im_used: 226, bad_request: 400, unauthorized: 401, payment_required: 402, forbidden: 403, not_found: 404, method_not_allowed: 405, not_acceptable: 406, proxy_authentication_required: 407, request_timeout: 408, conflict: 409, gone: 410, length_required: 411, precondition_failed: 412, payload_too_large: 413, uri_too_long: 414, unsupported_media_type: 415, range_not_satisfiable: 416, expectation_failed: 417, misdirected_request: 421, unprocessable_entity: 422, locked: 423, failed_dependency: 424, upgrade_required: 426, precondition_required: 428, too_many_requests: 429, request_header_fields_too_large: 431, unavailable_for_legal_reasons: 451, internal_server_error: 500, not_implemented: 501, bad_gateway: 502, service_unavailable: 503, gateway_timeout: 504, http_version_not_supported: 505, variant_also_negotiates: 506, insufficient_storage: 507, loop_detected: 508, not_extended: 510, network_authentication_required: 511}","doc":"standard response codes","summary":"<p>standard response codes</p>"}],"including_types":[{"html_id":"action-controller/ActionController/Base","kind":"class","full_name":"ActionController::Base","name":"Base"}],"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"instance_methods":[{"html_id":"accepts_formats:Array(String)-instance-method","name":"accepts_formats","doc":"Extracts the mime types from the Accept header","summary":"<p>Extracts the mime types from the Accept header</p>","abstract":false,"location":{"filename":"src/action-controller/responders.cr","line_number":265,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/responders.cr#L265"},"def":{"name":"accepts_formats","return_type":"Array(String)","visibility":"Public","body":"accept = request.headers[\"Accept\"]? || \"\"\n(accept.split(\";\")).flat_map() do |__arg1|\n  (__arg1.split(ACCEPT_SEPARATOR_REGEX)).select(&.includes?('/'))\nend\n"}}],"macros":[{"html_id":"head(status)-macro","name":"head","doc":"only sends the header, no content to be sent.\n\nyou should only use render with the Macro DSL\n```\ndelete \"/:id\", :destroy do\n  MyModel.find(route_params[\"id\"]).destroy\n  head HTTP::Status::ACCEPTED\nend\n```","summary":"<p>only sends the header, no content to be sent.</p>","abstract":false,"args":[{"name":"status","external_name":"status","restriction":""}],"args_string":"(status)","args_html":"(status)","location":{"filename":"src/action-controller/responders.cr","line_number":192,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/responders.cr#L192"},"def":{"name":"head","args":[{"name":"status","external_name":"status","restriction":""}],"visibility":"Public","body":"    render(\n{{ status }}\n, true)\n  \n"}},{"html_id":"redirect_to(path,status=:found)-macro","name":"redirect_to","doc":"redirects the browser to a new route\n\nyou should only use render with the Macro DSL\n```\npatch \"/:id\", :update do\n  redirect_to \"/#{params[\"id\"]}\"\nend\n```","summary":"<p>redirects the browser to a new route</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""},{"name":"status","default_value":":found","external_name":"status","restriction":""}],"args_string":"(path, status = :found)","args_html":"(path, status = <span class=\"n\">:found</span>)","location":{"filename":"src/action-controller/responders.cr","line_number":204,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/responders.cr#L204"},"def":{"name":"redirect_to","args":[{"name":"path","external_name":"path","restriction":""},{"name":"status","default_value":":found","external_name":"status","restriction":""}],"visibility":"Public","body":"    \n%response\n = @__context__.response\n\n    \n%session\n = @__session__\n    \n%session\n.encode(\n%response\n.cookies) if \n%session\n && \n%session\n.modified?\n\n    \n{% if status.is_a?(SymbolLiteral) %}\n      %response.status_code = {{ REDIRECTION_CODES[status] }}\n    {% else %}\n      %response.status_code = ({{ status }}).to_i\n    {% end %}\n\n\n    \n%response\n.headers[\"Location\"] = \n{{ path }}\n\n    @__render_called__ = true\n    return\n  \n"}},{"html_id":"render(status=:ok,head=nil,json=nil,yaml=nil,xml=nil,html=nil,text=nil,binary=nil,template=nil,partial=nil,layout=nil)-macro","name":"render","doc":"used to stream a response back to the user, serializing directly to the IO\n\nthe content type is set appropriately based on the response type\n\na call to render implicitly executes a `return` as the response has been written to the client\n\nyou should only use render with the Macro DSL\n```\nget \"/:id\", :show do\n  render json: MyModel.find(route_params[\"id\"])\nend\n```","summary":"<p>used to stream a response back to the user, serializing directly to the IO</p>","abstract":false,"args":[{"name":"status","default_value":":ok","external_name":"status","restriction":""},{"name":"head","default_value":"nil","external_name":"head","restriction":""},{"name":"json","default_value":"nil","external_name":"json","restriction":""},{"name":"yaml","default_value":"nil","external_name":"yaml","restriction":""},{"name":"xml","default_value":"nil","external_name":"xml","restriction":""},{"name":"html","default_value":"nil","external_name":"html","restriction":""},{"name":"text","default_value":"nil","external_name":"text","restriction":""},{"name":"binary","default_value":"nil","external_name":"binary","restriction":""},{"name":"template","default_value":"nil","external_name":"template","restriction":""},{"name":"partial","default_value":"nil","external_name":"partial","restriction":""},{"name":"layout","default_value":"nil","external_name":"layout","restriction":""}],"args_string":"(status = :ok, head = nil, json = nil, yaml = nil, xml = nil, html = nil, text = nil, binary = nil, template = nil, partial = nil, layout = nil)","args_html":"(status = <span class=\"n\">:ok</span>, head = <span class=\"n\">nil</span>, json = <span class=\"n\">nil</span>, yaml = <span class=\"n\">nil</span>, xml = <span class=\"n\">nil</span>, html = <span class=\"n\">nil</span>, text = <span class=\"n\">nil</span>, binary = <span class=\"n\">nil</span>, template = <span class=\"n\">nil</span>, partial = <span class=\"n\">nil</span>, layout = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/responders.cr","line_number":102,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/responders.cr#L102"},"def":{"name":"render","args":[{"name":"status","default_value":":ok","external_name":"status","restriction":""},{"name":"head","default_value":"nil","external_name":"head","restriction":""},{"name":"json","default_value":"nil","external_name":"json","restriction":""},{"name":"yaml","default_value":"nil","external_name":"yaml","restriction":""},{"name":"xml","default_value":"nil","external_name":"xml","restriction":""},{"name":"html","default_value":"nil","external_name":"html","restriction":""},{"name":"text","default_value":"nil","external_name":"text","restriction":""},{"name":"binary","default_value":"nil","external_name":"binary","restriction":""},{"name":"template","default_value":"nil","external_name":"template","restriction":""},{"name":"partial","default_value":"nil","external_name":"partial","restriction":""},{"name":"layout","default_value":"nil","external_name":"layout","restriction":""}],"visibility":"Public","body":"    \n{% if [head, json, xml, html, yaml, text, binary, template, partial].all?() do |__arg0|\n  __arg0.is_a?(Path)\nend %}\n      {{ raise(\"Render must be called with one of json, xml, html, yaml, text, binary, template, partial\") }}\n    {% end %}\n\n\n    \n%response\n = @__context__.response\n    \n%ret_val\n = \n{{ ((((((json || yaml) || xml) || html) || text) || binary) || template) || partial }}\n\n\n    \n{% if status.is_a?(SymbolLiteral) %}\n      %response.status_code = {{ STATUS_CODES[status] }}\n    {% else %}\n      %response.status_code = ({{ status }}).to_i\n    {% end %}\n\n\n    \n%ctype\n = \n%response\n.headers[\"Content-Type\"]?\n\n    \n%session\n = @__session__\n    \n%session\n.encode(\n%response\n.cookies) if \n%session\n && \n%session\n.modified?\n\n    \n{% if json.nil? %}{% else %}\n      %response.content_type = {{ MIME_TYPES[:json] }} unless %ctype\n      unless @__head_request__\n        %json = ({{ json }})\n        if %json.is_a?(String)\n          %json.to_s(%response)\n        else\n          %json.to_json(%response)\n        end\n      end\n    {% end %}\n\n\n    \n{% if yaml.nil? %}{% else %}\n      %response.content_type = {{ MIME_TYPES[:yaml] }} unless %ctype\n      unless @__head_request__\n        %yaml = ({{ yaml }})\n        if %yaml.is_a?(String)\n          %yaml.to_s(%response)\n        else\n          %yaml.to_yaml(%response)\n        end\n      end\n    {% end %}\n\n\n    \n{% if xml.nil? %}{% else %}\n      %response.content_type = {{ MIME_TYPES[:xml] }} unless %ctype\n      {{ xml }}.to_s(%response) unless @__head_request__\n    {% end %}\n\n\n    \n{% if html.nil? %}{% else %}\n      %response.content_type = {{ MIME_TYPES[:html] }} unless %ctype\n      {{ html }}.to_s(%response) unless @__head_request__\n    {% end %}\n\n\n    \n{% if text.nil? %}{% else %}\n      %response.content_type = {{ MIME_TYPES[:text] }} unless %ctype\n      {{ text }}.to_s(%response) unless @__head_request__\n    {% end %}\n\n\n    \n{% if binary.nil? %}{% else %}\n      %response.content_type = {{ MIME_TYPES[:binary] }} unless %ctype\n      {{ binary }}.to_s(%response) unless @__head_request__\n    {% end %}\n\n\n    \n{% if template.nil? %}{% else %}\n      %response.content_type = {{ MIME_TYPES[:html] }} unless %ctype\n      {% if layout %}\n        template({{ template }}, layout: {{ layout }}, io: %response) unless @__head_request__\n      {% else %}\n        template({{ template }}, io: %response) unless @__head_request__\n      {% end %}\n    {% end %}\n\n\n    \n{% if partial.nil? %}{% else %}\n      %response.content_type = {{ MIME_TYPES[:html] }} unless %ctype\n      template(partial: {{ partial }}, io: %response) unless @__head_request__\n    {% end %}\n\n\n    @__render_called__ = true\n    return \n%ret_val\n\n  \n"}},{"html_id":"respond_with(status=:ok,&block)-macro","name":"respond_with","doc":"uses the content-type header to respond in the appropriate format\n\nyou should only use render with the Macro DSL\n```\nget \"/:id\", :show do\n  model = MyModel.find(route_params[\"id\"])\n\n  respond_with do\n    text model # calls to_s(response) on the object passed\n    json model # calls to_json(response) on the object passed\n    xml do     # can provide a block to perform additional processing too\n      str = \"<set_var>#{model.build_xml}</set_var>\"\n      XML.parse(str)\n    end\n  end\nend\n```","summary":"<p>uses the content-type header to respond in the appropriate format</p>","abstract":false,"args":[{"name":"status","default_value":":ok","external_name":"status","restriction":""}],"args_string":"(status = :ok, &block)","args_html":"(status = <span class=\"n\">:ok</span>, &block)","location":{"filename":"src/action-controller/responders.cr","line_number":238,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/responders.cr#L238"},"def":{"name":"respond_with","args":[{"name":"status","default_value":":ok","external_name":"status","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n%resp\n = ::ActionController::Responders::SelectResponse.new(response, accepts_formats, @__head_request__)\n    \n%resp\n.responses do\n      \n{{ block.body }}\n\n    \nend\n\n    \n%response\n = @__context__.response\n    \n{% if (status != (:ok)) || (status != 200) %}\n      {% if status.is_a?(SymbolLiteral) %}\n        %response.status_code = {{ STATUS_CODES[status] }}\n      {% else %}\n        %response.status_code = ({{ status }}).to_i\n      {% end %}\n    {% end %}\n\n\n    \n%session\n = @__session__\n    \n%session\n.encode(\n%response\n.cookies) if \n%session\n && \n%session\n.modified?\n\n    \n%resp\n.build_response\n    @__render_called__ = true\n    return\n  \n"}}]},{"html_id":"action-controller/ActionController/Route","path":"ActionController/Route.html","kind":"module","full_name":"ActionController::Route","name":"Route","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":84,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L84"},{"filename":"src/action-controller/router/route_params.cr","line_number":37,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L37"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"types":[{"html_id":"action-controller/ActionController/Route/Builder","path":"ActionController/Route/Builder.html","kind":"module","full_name":"ActionController::Route::Builder","name":"Builder","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":104,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L104"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_PARSER","name":"DEFAULT_PARSER","value":"[\"application/json\"]","doc":"by default applications expect to receive JSON","summary":"<p>by default applications expect to receive JSON</p>"},{"id":"DEFAULT_RESPONDER","name":"DEFAULT_RESPONDER","value":"[\"application/json\"]","doc":"by default applications respond with JSON","summary":"<p>by default applications respond with JSON</p>"}],"including_types":[{"html_id":"action-controller/ActionController/Base","kind":"class","full_name":"ActionController::Base","name":"Base"}],"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"helpers for defining routes with strong parameters","summary":"<p>helpers for defining routes with strong parameters</p>","macros":[{"html_id":"add_parser(content_type,&block)-macro","name":"add_parser","doc":"add code that can be used to deserialise request bodies of the content-type provided\n\n```\nadd_parser(\"application/yaml\") do |klass, body_io, request|\n  request_charset = ActionController::Support.charset(request.headers)\n  body_io.set_encoding(request_charset) if request_charset\n  klass.from_yaml(body_io)\nend\n```","summary":"<p>add code that can be used to deserialise request bodies of the content-type provided</p>","abstract":false,"args":[{"name":"content_type","external_name":"content_type","restriction":""}],"args_string":"(content_type, &block)","args_html":"(content_type, &block)","location":{"filename":"src/action-controller/router/builder.cr","line_number":163,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L163"},"def":{"name":"add_parser","args":[{"name":"content_type","external_name":"content_type","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% PARSERS[content_type] = block %}\n\n  \n"}},{"html_id":"add_responder(content_type,&block)-macro","name":"add_responder","doc":"add a new responder for the content-type provided, this will be called to render responses\n\n```\nadd_responder(\"application/yaml\") { |io, result| result.to_yaml(io) }\n```","summary":"<p>add a new responder for the content-type provided, this will be called to render responses</p>","abstract":false,"args":[{"name":"content_type","external_name":"content_type","restriction":""}],"args_string":"(content_type, &block)","args_html":"(content_type, &block)","location":{"filename":"src/action-controller/router/builder.cr","line_number":138,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L138"},"def":{"name":"add_responder","args":[{"name":"content_type","external_name":"content_type","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% RESPONDERS[content_type] = block %}\n\n  \n"}},{"html_id":"default_parser(content_type)-macro","name":"default_parser","doc":"specify the default content-type of request bodies, if the user doesn't specify one","summary":"<p>specify the default content-type of request bodies, if the user doesn't specify one</p>","abstract":false,"args":[{"name":"content_type","external_name":"content_type","restriction":""}],"args_string":"(content_type)","args_html":"(content_type)","location":{"filename":"src/action-controller/router/builder.cr","line_number":149,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L149"},"def":{"name":"default_parser","args":[{"name":"content_type","external_name":"content_type","restriction":""}],"visibility":"Public","body":"    \n{% DEFAULT_PARSER[0] = content_type %}\n\n    \n{% unless PARSERS[content_type]\n  raise(\"no responder available for default content type: #{content_type}\")\nend %}\n\n  \n"}},{"html_id":"default_responder(content_type)-macro","name":"default_responder","doc":"specify the responder content-type to use if the user doesn't request one","summary":"<p>specify the responder content-type to use if the user doesn't request one</p>","abstract":false,"args":[{"name":"content_type","external_name":"content_type","restriction":""}],"args_string":"(content_type)","args_html":"(content_type)","location":{"filename":"src/action-controller/router/builder.cr","line_number":128,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L128"},"def":{"name":"default_responder","args":[{"name":"content_type","external_name":"content_type","restriction":""}],"visibility":"Public","body":"    \n{% DEFAULT_RESPONDER[0] = content_type %}\n\n    \n{% unless RESPONDERS[content_type]\n  raise(\"no responder available for default content type: #{content_type}\")\nend %}\n\n  \n"}}]},{"html_id":"action-controller/ActionController/Route/DELETE","path":"ActionController/Route/DELETE.html","kind":"annotation","full_name":"ActionController::Route::DELETE","name":"DELETE","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L5"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a new route that responds to \"DELETE\" requests\n\n```crystal\n@[AC::Route::\"DELETE\"(\"/my/route/:name\")]\ndef my_route_name(name : String) : String\n  name\nend\n```","summary":"<p>define a new route that responds to &quot;DELETE&quot; requests</p>"},{"html_id":"action-controller/ActionController/Route/Error","path":"ActionController/Route/Error.html","kind":"class","full_name":"ActionController::Route::Error","name":"Error","abstract":false,"superclass":{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":86,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L86"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"action-controller/ActionController/Route/NotAcceptable","kind":"class","full_name":"ActionController::Route::NotAcceptable","name":"NotAcceptable"},{"html_id":"action-controller/ActionController/Route/UnsupportedMediaType","kind":"class","full_name":"ActionController::Route::UnsupportedMediaType","name":"UnsupportedMediaType"}],"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"the base class for all route related errors","summary":"<p>the base class for all route related errors</p>","constructors":[{"html_id":"new(message:String|Nil=nil,accepts:Array(String)|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"accepts","default_value":"nil","external_name":"accepts","restriction":"Array(String) | ::Nil"}],"args_string":"(message : String | Nil = nil, accepts : Array(String) | Nil = nil)","args_html":"(message : String | Nil = <span class=\"n\">nil</span>, accepts : Array(String) | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/router/builder.cr","line_number":87,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L87"},"def":{"name":"new","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"accepts","default_value":"nil","external_name":"accepts","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message, accepts)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"accepts:Array(String)|Nil-instance-method","name":"accepts","abstract":false,"location":{"filename":"src/action-controller/router/builder.cr","line_number":91,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L91"},"def":{"name":"accepts","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@accepts"}}]},{"html_id":"action-controller/ActionController/Route/Exception","path":"ActionController/Route/Exception.html","kind":"annotation","full_name":"ActionController::Route::Exception","name":"Exception","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":59,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L59"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a handler for common errors\n\n```\n@[AC::Route::Exception(AC::Route::Param::MissingError, status_code: HTTP::Status::UNPROCESSABLE_ENTITY)]\n@[AC::Route::Exception(AC::Route::Param::ValueError, status_code: HTTP::Status::BAD_REQUEST)]\ndef invalid_param(error) : AC::Error::ParameterResponse\n  AC::Error::ParameterResponse.new error: error.message.as(String), parameter: error.parameter, restriction: error.restriction\nend\n```","summary":"<p>define a handler for common errors</p>"},{"html_id":"action-controller/ActionController/Route/Filter","path":"ActionController/Route/Filter.html","kind":"annotation","full_name":"ActionController::Route::Filter","name":"Filter","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":47,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L47"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a new route that responds to websocket requests\n\n```\n@[AC::Route::Filter(:before_action)]\ndef load_model(id : String)\n  @model = MyModel.find(id)\nend\n```","summary":"<p>define a new route that responds to websocket requests</p>"},{"html_id":"action-controller/ActionController/Route/GET","path":"ActionController/Route/GET.html","kind":"annotation","full_name":"ActionController::Route::GET","name":"GET","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L5"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a new route that responds to \"GET\" requests\n\n```crystal\n@[AC::Route::\"GET\"(\"/my/route/:name\")]\ndef my_route_name(name : String) : String\n  name\nend\n```","summary":"<p>define a new route that responds to &quot;GET&quot; requests</p>"},{"html_id":"action-controller/ActionController/Route/NotAcceptable","path":"ActionController/Route/NotAcceptable.html","kind":"class","full_name":"ActionController::Route::NotAcceptable","name":"NotAcceptable","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Route/Error","kind":"class","full_name":"ActionController::Route::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Route/Error","kind":"class","full_name":"ActionController::Route::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":95,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L95"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"we don't support any of the accepted response content types","summary":"<p>we don't support any of the accepted response content types</p>"},{"html_id":"action-controller/ActionController/Route/OPTIONS","path":"ActionController/Route/OPTIONS.html","kind":"annotation","full_name":"ActionController::Route::OPTIONS","name":"OPTIONS","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L5"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a new route that responds to \"OPTIONS\" requests\n\n```crystal\n@[AC::Route::\"OPTIONS\"(\"/my/route/:name\")]\ndef my_route_name(name : String) : String\n  name\nend\n```","summary":"<p>define a new route that responds to &quot;OPTIONS&quot; requests</p>"},{"html_id":"action-controller/ActionController/Route/Param","path":"ActionController/Route/Param.html","kind":"module","full_name":"ActionController::Route::Param","name":"Param","abstract":false,"locations":[{"filename":"src/action-controller/router/route_params.cr","line_number":37,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L37"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"this namespace is used to provide transparent strong parameters\n\nall transparent converters need to match the desired Class name\nand be prefixed with `Convert`\n\ni.e. let's take a class like `Int32`\n```\nstruct AC::Route::Param::ConvertInt32 < AC::Route::Param::Conversion\n  def convert(raw : String)\n    raw.to_i\n  end\nend\n```\n\nnow if you would like to provide custom options for a converter you can.\n\nin this case we're allowing for a custom Int32 base, i.e. maybe you expect a hex string\n```\nstruct AC::Route::Param::ConvertInt32 < AC::Route::Param::Conversion\n  def initialize(@base : Int32 = 10)\n  end\n\n  def convert(raw : String)\n    raw.to_i(@base)\n  end\nend\n\n# then in your routes\n@[AC::Route::GET(\"/hex_route/:id\", config: {id: {base: 16}})]\ndef other_route_test(id : Int32) : Int32\n  id # response will be in base 10\nend\n```","summary":"<p>this namespace is used to provide transparent strong parameters</p>","types":[{"html_id":"action-controller/ActionController/Route/Param/Conversion","path":"ActionController/Route/Param/Conversion.html","kind":"struct","full_name":"ActionController::Route::Param::Conversion","name":"Conversion","abstract":true,"superclass":{"html_id":"action-controller/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"action-controller/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"action-controller/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/router/route_params.cr","line_number":56,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L56"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route/Param","kind":"module","full_name":"ActionController::Route::Param","name":"Param"},"doc":"The method for building in support of different route params","summary":"<p>The method for building in support of different route params</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/action-controller/router/route_params.cr","line_number":56,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L56"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"convert(raw:String)-instance-method","name":"convert","doc":"convert should typically return nil if the conversion failed\nthis allows support for Union types, however may not be practical\nor desirable for most.\n\nNilable Unions against a single type that raises an error is supported","summary":"<p>convert should typically return nil if the conversion failed this allows support for Union types, however may not be practical or desirable for most.</p>","abstract":true,"args":[{"name":"raw","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : String)","location":{"filename":"src/action-controller/router/route_params.cr","line_number":62,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L62"},"def":{"name":"convert","args":[{"name":"raw","external_name":"raw","restriction":"String"}],"visibility":"Public","body":""}},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/action-controller/router/route_params.cr","line_number":56,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L56"},"def":{"name":"initialize","visibility":"Public","body":""}}]},{"html_id":"action-controller/ActionController/Route/Param/Error","path":"ActionController/Route/Param/Error.html","kind":"class","full_name":"ActionController::Route::Param::Error","name":"Error","abstract":false,"superclass":{"html_id":"action-controller/ArgumentError","kind":"class","full_name":"ArgumentError","name":"ArgumentError"},"ancestors":[{"html_id":"action-controller/ArgumentError","kind":"class","full_name":"ArgumentError","name":"ArgumentError"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/router/route_params.cr","line_number":39,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L39"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"action-controller/ActionController/Route/Param/MissingError","kind":"class","full_name":"ActionController::Route::Param::MissingError","name":"MissingError"},{"html_id":"action-controller/ActionController/Route/Param/ValueError","kind":"class","full_name":"ActionController::Route::Param::ValueError","name":"ValueError"}],"namespace":{"html_id":"action-controller/ActionController/Route/Param","kind":"module","full_name":"ActionController::Route::Param","name":"Param"},"doc":"Handle this to return a 404","summary":"<p>Handle this to return a 404</p>","constructors":[{"html_id":"new(message,parameter:Nil|String=nil,restriction:Nil|String=nil)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":""},{"name":"parameter","default_value":"nil","external_name":"parameter","restriction":"::Nil | ::String"},{"name":"restriction","default_value":"nil","external_name":"restriction","restriction":"::Nil | ::String"}],"args_string":"(message, parameter : Nil | String = nil, restriction : Nil | String = nil)","args_html":"(message, parameter : Nil | String = <span class=\"n\">nil</span>, restriction : Nil | String = <span class=\"n\">nil</span>)","location":{"filename":"src/action-controller/router/route_params.cr","line_number":40,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L40"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":""},{"name":"parameter","default_value":"nil","external_name":"parameter","restriction":"::Nil | ::String"},{"name":"restriction","default_value":"nil","external_name":"restriction","restriction":"::Nil | ::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message, parameter, restriction)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"parameter:String|Nil-instance-method","name":"parameter","abstract":false,"location":{"filename":"src/action-controller/router/route_params.cr","line_number":43,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L43"},"def":{"name":"parameter","return_type":"String | ::Nil","visibility":"Public","body":"@parameter"}},{"html_id":"restriction:String|Nil-instance-method","name":"restriction","abstract":false,"location":{"filename":"src/action-controller/router/route_params.cr","line_number":44,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L44"},"def":{"name":"restriction","return_type":"String | ::Nil","visibility":"Public","body":"@restriction"}}]},{"html_id":"action-controller/ActionController/Route/Param/MissingError","path":"ActionController/Route/Param/MissingError.html","kind":"class","full_name":"ActionController::Route::Param::MissingError","name":"MissingError","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Route/Param/Error","kind":"class","full_name":"ActionController::Route::Param::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Route/Param/Error","kind":"class","full_name":"ActionController::Route::Param::Error","name":"Error"},{"html_id":"action-controller/ArgumentError","kind":"class","full_name":"ArgumentError","name":"ArgumentError"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/router/route_params.cr","line_number":48,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L48"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route/Param","kind":"module","full_name":"ActionController::Route::Param","name":"Param"},"doc":"raised when a required param is missing from the request","summary":"<p>raised when a required param is missing from the request</p>"},{"html_id":"action-controller/ActionController/Route/Param/ValueError","path":"ActionController/Route/Param/ValueError.html","kind":"class","full_name":"ActionController::Route::Param::ValueError","name":"ValueError","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Route/Param/Error","kind":"class","full_name":"ActionController::Route::Param::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Route/Param/Error","kind":"class","full_name":"ActionController::Route::Param::Error","name":"Error"},{"html_id":"action-controller/ArgumentError","kind":"class","full_name":"ArgumentError","name":"ArgumentError"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/router/route_params.cr","line_number":52,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/route_params.cr#L52"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route/Param","kind":"module","full_name":"ActionController::Route::Param","name":"Param"},"doc":"raised when a param is provided however the value is not parsable or usable","summary":"<p>raised when a param is provided however the value is not parsable or usable</p>"}]},{"html_id":"action-controller/ActionController/Route/PATCH","path":"ActionController/Route/PATCH.html","kind":"annotation","full_name":"ActionController::Route::PATCH","name":"PATCH","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L5"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a new route that responds to \"PATCH\" requests\n\n```crystal\n@[AC::Route::\"PATCH\"(\"/my/route/:name\")]\ndef my_route_name(name : String) : String\n  name\nend\n```","summary":"<p>define a new route that responds to &quot;PATCH&quot; requests</p>"},{"html_id":"action-controller/ActionController/Route/POST","path":"ActionController/Route/POST.html","kind":"annotation","full_name":"ActionController::Route::POST","name":"POST","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L5"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a new route that responds to \"POST\" requests\n\n```crystal\n@[AC::Route::\"POST\"(\"/my/route/:name\")]\ndef my_route_name(name : String) : String\n  name\nend\n```","summary":"<p>define a new route that responds to &quot;POST&quot; requests</p>"},{"html_id":"action-controller/ActionController/Route/PUT","path":"ActionController/Route/PUT.html","kind":"annotation","full_name":"ActionController::Route::PUT","name":"PUT","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L5"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a new route that responds to \"PUT\" requests\n\n```crystal\n@[AC::Route::\"PUT\"(\"/my/route/:name\")]\ndef my_route_name(name : String) : String\n  name\nend\n```","summary":"<p>define a new route that responds to &quot;PUT&quot; requests</p>"},{"html_id":"action-controller/ActionController/Route/UnsupportedMediaType","path":"ActionController/Route/UnsupportedMediaType.html","kind":"class","full_name":"ActionController::Route::UnsupportedMediaType","name":"UnsupportedMediaType","abstract":false,"superclass":{"html_id":"action-controller/ActionController/Route/Error","kind":"class","full_name":"ActionController::Route::Error","name":"Error"},"ancestors":[{"html_id":"action-controller/ActionController/Route/Error","kind":"class","full_name":"ActionController::Route::Error","name":"Error"},{"html_id":"action-controller/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":99,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L99"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"we don't support the posted media type","summary":"<p>we don't support the posted media type</p>"},{"html_id":"action-controller/ActionController/Route/WebSocket","path":"ActionController/Route/WebSocket.html","kind":"annotation","full_name":"ActionController::Route::WebSocket","name":"WebSocket","abstract":false,"locations":[{"filename":"src/action-controller/router/builder.cr","line_number":36,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/router/builder.cr#L36"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Route","kind":"module","full_name":"ActionController::Route","name":"Route"},"doc":"define a new route that responds to websocket requests\n\n```\nSOCKETS = [] of HTTP::WebSocket\n\n@[AC::Route::WebSocket(\"/websocket/:name\")]\ndef websocket(socket, name : String)\n  socket.on_message do |message|\n    SOCKETS.each &.send(\"#{name}: #{message}\")\n  end\n\n  socket.on_close do\n    SOCKETS.delete(socket)\n  end\nend\n```","summary":"<p>define a new route that responds to websocket requests</p>"}]},{"html_id":"action-controller/ActionController/Server","path":"ActionController/Server.html","kind":"class","full_name":"ActionController::Server","name":"Server","abstract":false,"superclass":{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"action-controller/ActionController/Router","kind":"module","full_name":"ActionController::Router","name":"Router"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/server.cr","line_number":4,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L4"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"REUSE_DEFAULT","name":"REUSE_DEFAULT","value":"{% if flag?(:win32) %} false {% else %} true {% end %}","doc":"reuse port is only useful for broadcast or multicast applications on windows\nwhen used with TCP it is considered a security risk as the port can be stolen","summary":"<p>reuse port is only useful for broadcast or multicast applications on windows when used with TCP it is considered a security risk as the port can be stolen</p>"}],"included_modules":[{"html_id":"action-controller/ActionController/Router","kind":"module","full_name":"ActionController::Router","name":"Router"}],"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"class_methods":[{"html_id":"after(*handlers)-class-method","name":"after","doc":"handlers to run after your application code, see: [handlers](https://crystal-lang.org/api/latest/HTTP/Handler.html)\n\nthese will only be run if the route is not found in your application","summary":"<p>handlers to run after your application code, see: <a href=\"https://crystal-lang.org/api/latest/HTTP/Handler.html\">handlers</a></p>","abstract":false,"args":[{"name":"handlers","external_name":"handlers","restriction":""}],"args_string":"(*handlers)","args_html":"(*handlers)","location":{"filename":"src/action-controller/server.cr","line_number":37,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L37"},"def":{"name":"after","args":[{"name":"handlers","external_name":"handlers","restriction":""}],"splat_index":0,"visibility":"Public","body":"AFTER_HANDLERS.concat(handlers)"}},{"html_id":"before(*handlers)-class-method","name":"before","doc":"handlers to run before your application code, see: [handlers](https://crystal-lang.org/api/latest/HTTP/Handler.html)\n\nconfigure these in your [config.cr file](https://github.com/spider-gazelle/spider-gazelle/blob/master/src/config.cr)","summary":"<p>handlers to run before your application code, see: <a href=\"https://crystal-lang.org/api/latest/HTTP/Handler.html\">handlers</a></p>","abstract":false,"args":[{"name":"handlers","external_name":"handlers","restriction":""}],"args_string":"(*handlers)","args_html":"(*handlers)","location":{"filename":"src/action-controller/server.cr","line_number":30,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L30"},"def":{"name":"before","args":[{"name":"handlers","external_name":"handlers","restriction":""}],"splat_index":0,"visibility":"Public","body":"BEFORE_HANDLERS.concat(handlers)"}},{"html_id":"print_routes-class-method","name":"print_routes","doc":"Used to output route details to the console from a command line switch","summary":"<p>Used to output route details to the console from a command line switch</p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":217,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L217"},"def":{"name":"print_routes","visibility":"Public","body":"headers = {\"Controller\", :Action, :Verb, \"URI Pattern\"}\nsizes = component_sizes(*headers)\nself.routes.each do |route|\n  route_size = component_sizes(*route)\n  sizes = max_size(sizes, route_size)\nend\nprint_route(sizes, headers)\nself.routes.each do |route|\n  print_route(sizes, route)\nend\n"}},{"html_id":"routes:Array(Tuple(String,Symbol,Symbol,String))-class-method","name":"routes","doc":"returns a list of the routes defined in the application\n\nresponds with `[{\"ControllerClass\", :name, :verb, \"/route\"}]`","summary":"<p>returns a list of the routes defined in the application</p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":207,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L207"},"def":{"name":"routes","return_type":"Array(Tuple(String, Symbol, Symbol, String))","visibility":"Public","body":"routes = [] of ::Tuple(String, Symbol, Symbol, String)\n{% for klass in ActionController::Base::CONCRETE_CONTROLLERS %}\n      routes.concat {{ klass }}.__route_list__\n    {% end %}\nroutes\n"}}],"constructors":[{"html_id":"new(port:Int32=3000,host:String=\"127.0.0.1\",reuse_port:Bool=REUSE_DEFAULT)-class-method","name":"new","doc":"create an instance of the application","summary":"<p>create an instance of the application</p>","abstract":false,"args":[{"name":"port","default_value":"3000","external_name":"port","restriction":"::Int32"},{"name":"host","default_value":"\"127.0.0.1\"","external_name":"host","restriction":"::String"},{"name":"reuse_port","default_value":"REUSE_DEFAULT","external_name":"reuse_port","restriction":"Bool"}],"args_string":"(port : Int32 = 3000, host : String = \"127.0.0.1\", reuse_port : Bool = REUSE_DEFAULT)","args_html":"(port : Int32 = <span class=\"n\">3000</span>, host : String = <span class=\"s\">&quot;127.0.0.1&quot;</span>, reuse_port : Bool = <span class=\"t\">REUSE_DEFAULT</span>)","location":{"filename":"src/action-controller/server.cr","line_number":48,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L48"},"def":{"name":"new","args":[{"name":"port","default_value":"3000","external_name":"port","restriction":"::Int32"},{"name":"host","default_value":"\"127.0.0.1\"","external_name":"host","restriction":"::String"},{"name":"reuse_port","default_value":"REUSE_DEFAULT","external_name":"reuse_port","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(port, host, reuse_port)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(ssl_context:OpenSSL::SSL::Context::Server|Nil,port:Int32=3000,host:String=\"127.0.0.1\",reuse_port:Bool=REUSE_DEFAULT)-class-method","name":"new","doc":"create an instance of the application with tls","summary":"<p>create an instance of the application with tls</p>","abstract":false,"args":[{"name":"ssl_context","external_name":"ssl_context","restriction":"OpenSSL::SSL::Context::Server | ::Nil"},{"name":"port","default_value":"3000","external_name":"port","restriction":"::Int32"},{"name":"host","default_value":"\"127.0.0.1\"","external_name":"host","restriction":"::String"},{"name":"reuse_port","default_value":"REUSE_DEFAULT","external_name":"reuse_port","restriction":"Bool"}],"args_string":"(ssl_context : OpenSSL::SSL::Context::Server | Nil, port : Int32 = 3000, host : String = \"127.0.0.1\", reuse_port : Bool = REUSE_DEFAULT)","args_html":"(ssl_context : OpenSSL::SSL::Context::Server | Nil, port : Int32 = <span class=\"n\">3000</span>, host : String = <span class=\"s\">&quot;127.0.0.1&quot;</span>, reuse_port : Bool = <span class=\"t\">REUSE_DEFAULT</span>)","location":{"filename":"src/action-controller/server.cr","line_number":55,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L55"},"def":{"name":"new","args":[{"name":"ssl_context","external_name":"ssl_context","restriction":"OpenSSL::SSL::Context::Server | ::Nil"},{"name":"port","default_value":"3000","external_name":"port","restriction":"::Int32"},{"name":"host","default_value":"\"127.0.0.1\"","external_name":"host","restriction":"::String"},{"name":"reuse_port","default_value":"REUSE_DEFAULT","external_name":"reuse_port","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(ssl_context, port, host, reuse_port)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"close:Nil-instance-method","name":"close","doc":"Terminates the application gracefully once any cluster processes have exited","summary":"<p>Terminates the application gracefully once any cluster processes have exited</p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":111,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L111"},"def":{"name":"close","return_type":"Nil","visibility":"Public","body":"@processes.each(&.get)\n@socket.close\n"}},{"html_id":"cluster(count,short_arg,long_arg,args=ARGV.dup)-instance-method","name":"cluster","doc":"Launches additional worker processes\nremoving the short and long arguments that trigger this method","summary":"<p>Launches additional worker processes removing the short and long arguments that trigger this method</p>","abstract":false,"args":[{"name":"count","external_name":"count","restriction":""},{"name":"short_arg","external_name":"short_arg","restriction":""},{"name":"long_arg","external_name":"long_arg","restriction":""},{"name":"args","default_value":"ARGV.dup","external_name":"args","restriction":""}],"args_string":"(count, short_arg, long_arg, args = ARGV.dup)","args_html":"(count, short_arg, long_arg, args = <span class=\"t\">ARGV</span>.dup)","location":{"filename":"src/action-controller/server.cr","line_number":136,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L136"},"def":{"name":"cluster","args":[{"name":"count","external_name":"count","restriction":""},{"name":"short_arg","external_name":"short_arg","restriction":""},{"name":"long_arg","external_name":"long_arg","restriction":""},{"name":"args","default_value":"ARGV.dup","external_name":"args","restriction":""}],"visibility":"Public","body":"count = count.to_i64\nif count <= 0\n  count = System.cpu_count\nend\nif count <= 1\n  return\nend\ncount = count - 1\nprocess_path = Process.executable_path.as(String)\nargs.reject!(&.starts_with?(long_arg))\nremove = [] of Int32\nargs.each_with_index do |value, index|\n  if value == short_arg\n    remove << index\n  end\nend\nremove.each do |index|\n  args.delete_at(index, 2)\nend\n(0_i64...count).each do\n  @processes << future do\n    process = uninitialized Process\n    Process.run(process_path, args, input: Process::Redirect::Close, output: Process::Redirect::Inherit, error: Process::Redirect::Inherit) do |ref|\n      process = ref\n      puts(\" > worker #{process.pid} started\")\n    end\n    status = $?\n    if status.success?\n      puts(\" < worker #{process.pid} stopped\")\n    else\n      puts(\" ! worker process #{process.pid} failed with #{status.exit_status}\")\n    end\n    nil\n  end\nend\n"}},{"html_id":"cluster(count)-instance-method","name":"cluster","doc":"Forks additional worker processes","summary":"<p>Forks additional worker processes</p>","abstract":false,"args":[{"name":"count","external_name":"count","restriction":""}],"args_string":"(count)","args_html":"(count)","location":{"filename":"src/action-controller/server.cr","line_number":175,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L175"},"def":{"name":"cluster","args":[{"name":"count","external_name":"count","restriction":""}],"visibility":"Public","body":"count = count.to_i64\nif count <= 0\n  count = System.cpu_count\nend\nif count <= 1\n  return\nend\ncount = count - 1\nprocesses = [] of Process\n(0_i64...count).each do\n  process = Process.fork\n  if process\n  else\n    return\n  end\n  processes << process\nend\nprocesses.each do |process|\n  @processes << future do\n    status = process.wait\n    if status.success?\n      puts(\" < worker #{process.pid} stopped\")\n    else\n      puts(\" ! worker process #{process.pid} failed with #{status.exit_status}\")\n    end\n    nil\n  end\nend\n"}},{"html_id":"host:String-instance-method","name":"host","doc":"the host address the server is configured to run on","summary":"<p>the host address the server is configured to run on</p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":75,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L75"},"def":{"name":"host","visibility":"Public","body":"@host"}},{"html_id":"port:Int32-instance-method","name":"port","doc":"the port the server is accepting connections from","summary":"<p>the port the server is accepting connections from</p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":78,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L78"},"def":{"name":"port","visibility":"Public","body":"@port"}},{"html_id":"print_addresses-instance-method","name":"print_addresses","doc":"Prints the addresses that the server is listening on","summary":"<p>Prints the addresses that the server is listening on</p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":117,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L117"},"def":{"name":"print_addresses","visibility":"Public","body":"@socket.addresses.join(\" , \") do |socket|\n  family = socket.family\n  case socket.family\n  when Socket::Family::INET6, Socket::Family::INET\n    ip = Socket::IPAddress.from(socket.to_unsafe, socket.size)\n    \"http://#{ip.address}:#{ip.port}\"\n  when Socket::Family::UNIX\n    unix = Socket::UNIXAddress.from(socket.to_unsafe, socket.size)\n    \"unix://#{unix.path}\"\n  else\n    raise(\"Unsupported family type: #{family} (#{family.value})\")\n  end\nend"}},{"html_id":"run(&):Nil-instance-method","name":"run","doc":"Starts the server, providing a callback once the ports are bound","summary":"<p>Starts the server, providing a callback once the ports are bound</p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":85,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L85"},"def":{"name":"run","yields":0,"block_arity":0,"return_type":"Nil","visibility":"Public","body":"if @socket.addresses.empty?\n  if ssl_context = @ssl_context\n    @socket.bind_tls(@host, @port, ssl_context, @reuse_port)\n  else\n    @socket.bind_tcp(@host, @port, @reuse_port)\n  end\nend\nyield\n@socket.listen\n"}},{"html_id":"run:Nil-instance-method","name":"run","doc":"Starts the server","summary":"<p>Starts the server</p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":98,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L98"},"def":{"name":"run","return_type":"Nil","visibility":"Public","body":"if @socket.addresses.empty?\n  if ssl_context = @ssl_context\n    @socket.bind_tls(@host, @port, ssl_context, @reuse_port)\n  else\n    @socket.bind_tcp(@host, @port, @reuse_port)\n  end\nend\n\"Listening on #{print_addresses}\"\n@socket.listen\n"}},{"html_id":"socket:HTTP::Server-instance-method","name":"socket","doc":"Provides access the HTTP server for the purpose of binding\nFor example `server.socket.bind_unix \"/tmp/my-socket.sock\"`","summary":"<p>Provides access the HTTP server for the purpose of binding For example <code>server.socket.bind_unix &quot;/tmp/my-socket.sock&quot;</code></p>","abstract":false,"location":{"filename":"src/action-controller/server.cr","line_number":82,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/server.cr#L82"},"def":{"name":"socket","return_type":"HTTP::Server","visibility":"Public","body":"@socket"}}]},{"html_id":"action-controller/ActionController/Session","path":"ActionController/Session.html","kind":"class","full_name":"ActionController::Session","name":"Session","abstract":false,"superclass":{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"action-controller/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"action-controller/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/session.cr","line_number":6,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L6"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: key : String, example: nil, validation: nil}, {decl: secret : String, example: nil, validation: nil}, {decl: max_age : Int32 = NEVER, example: nil, validation: nil}, {decl: secure : Bool = false, example: nil, validation: nil}, {decl: encrypted : Bool = true, example: nil, validation: nil}, {decl: path : String = \"/\", example: nil, validation: nil}, {decl: domain : String | ::Nil = nil, example: nil, validation: nil}] of Nil"},{"id":"Log","name":"Log","value":"::Log.for(\"action-controller.session\")"},{"id":"MAX_COOKIE_SIZE","name":"MAX_COOKIE_SIZE","value":"4096","doc":"Cookies can typically store 4096 bytes.","summary":"<p>Cookies can typically store 4096 bytes.</p>"},{"id":"NEVER","name":"NEVER","value":"622080000","doc":"(~20 years in seconds)","summary":"<p>(~20 years in seconds)</p>"}],"included_modules":[{"html_id":"action-controller/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"action-controller/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":15,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L15"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"}},{"html_id":"from_cookies(cookies)-class-method","name":"from_cookies","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":""}],"args_string":"(cookies)","args_html":"(cookies)","location":{"filename":"src/action-controller/session.cr","line_number":52,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L52"},"def":{"name":"from_cookies","args":[{"name":"cookies","external_name":"cookies","restriction":""}],"visibility":"Public","body":"session = ActionController::Session.new\nbegin\n  session.parse(cookies)\nrescue error\n  Log.warn(exception: error) do\n    \"error parsing session\"\n  end\nend\nsession\n"}},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":15,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L15"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"}}],"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":38,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L38"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[]=(key,value)-instance-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/action-controller/session.cr","line_number":100,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L100"},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"if value.nil?\n  delete(key)\nelse\n  @store[key] = value\n  @modified = true\nend\nvalue\n"}},{"html_id":"clear-instance-method","name":"clear","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":110,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L110"},"def":{"name":"clear","visibility":"Public","body":"if @existing\n  @modified = true\nend\n@store.clear\n"}},{"html_id":"delete(key)-instance-method","name":"delete","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/action-controller/session.cr","line_number":115,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L115"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"@modified = true\n@store.delete(key)\n"}},{"html_id":"delete(key,&block)-instance-method","name":"delete","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key, &block)","args_html":"(key, &block)","location":{"filename":"src/action-controller/session.cr","line_number":120,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L120"},"def":{"name":"delete","args":[{"name":"key","external_name":"key","restriction":""}],"yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"@modified = true\n@store.delete(key, &block)\n"}},{"html_id":"delete_if(&block)-instance-method","name":"delete_if","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":125,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L125"},"def":{"name":"delete_if","yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"@modified = true\n@store.reject(&block)\n"}},{"html_id":"domain:String|Nil-instance-method","name":"domain","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":32,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L32"},"def":{"name":"domain","return_type":"String | ::Nil","visibility":"Public","body":"@domain"}},{"html_id":"domain=(domain:String|Nil)-instance-method","name":"domain=","abstract":false,"args":[{"name":"domain","external_name":"domain","restriction":"String | ::Nil"}],"args_string":"(domain : String | Nil)","args_html":"(domain : String | Nil)","location":{"filename":"src/action-controller/session.cr","line_number":32,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L32"},"def":{"name":"domain=","args":[{"name":"domain","external_name":"domain","restriction":"String | ::Nil"}],"visibility":"Public","body":"@domain = domain"}},{"html_id":"encode(cookies)-instance-method","name":"encode","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":""}],"args_string":"(cookies)","args_html":"(cookies)","location":{"filename":"src/action-controller/session.cr","line_number":73,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L73"},"def":{"name":"encode","args":[{"name":"cookies","external_name":"cookies","restriction":""}],"visibility":"Public","body":"if (!@existing) && self.empty?\n  return\nend\nif @existing && self.empty?\n  data = \"\"\n  age = 0\nelse\n  data = @encoder.prepare(self.to_json)\n  age = settings.max_age\n  if data.size > MAX_COOKIE_SIZE\n    raise(CookieSizeExceeded.new(\"#{data.size} > #{MAX_COOKIE_SIZE}\"))\n  end\nend\n@modified = false\ncookies[settings.key] = HTTP::Cookie.new(settings.key, data, settings.path, Time.utc + age.seconds, @domain, settings.secure, http_only: true, extension: \"SameSite=Lax\")\n"}},{"html_id":"modified:Bool-instance-method","name":"modified","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":28,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L28"},"def":{"name":"modified","visibility":"Public","body":"@modified"}},{"html_id":"modified?:Bool-instance-method","name":"modified?","doc":"Returns whether any key-value pair is modified.","summary":"<p>Returns whether any key-value pair is modified.</p>","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":26,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L26"},"def":{"name":"modified?","return_type":"Bool","visibility":"Public","body":"@modified"}},{"html_id":"parse(cookies)-instance-method","name":"parse","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":""}],"args_string":"(cookies)","args_html":"(cookies)","location":{"filename":"src/action-controller/session.cr","line_number":62,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L62"},"def":{"name":"parse","args":[{"name":"cookies","external_name":"cookies","restriction":""}],"visibility":"Public","body":"cookie = cookies[settings.key]?\nif cookie\n  data = (@encoder.extract(cookie.value)).to_s\n  self.merge!(Hash(String, String | Int64 | Float64 | Bool).from_json(data))\n  @modified = false\n  @existing = true\nend\n"}},{"html_id":"reject(&block)-instance-method","name":"reject","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":130,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L130"},"def":{"name":"reject","yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"@modified = true\n@store.reject(&block)\n"}},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":15,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L15"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"}},{"html_id":"touch-instance-method","name":"touch","abstract":false,"location":{"filename":"src/action-controller/session.cr","line_number":135,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L135"},"def":{"name":"touch","visibility":"Public","body":"@modified = true"}}],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","abstract":false,"args":[{"name":"call","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/action-controller/session.cr","line_number":36,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L36"},"def":{"name":"method_missing","args":[{"name":"call","external_name":"call","restriction":""}],"visibility":"Public","body":"      @store.\n{{ call }}\n\n    \n"}}],"types":[{"html_id":"action-controller/ActionController/Session/HabitatSettings","path":"ActionController/Session/HabitatSettings.html","kind":"class","full_name":"ActionController::Session::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/session.cr","line_number":15,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/session.cr#L15"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"action-controller/ActionController/Session","kind":"class","full_name":"ActionController::Session","name":"Session"},"class_methods":[{"html_id":"domain:String|Nil-class-method","name":"domain","abstract":false,"def":{"name":"domain","return_type":"String | ::Nil","visibility":"Public","body":"@@domain"}},{"html_id":"domain=(value:String|Nil)-class-method","name":"domain=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","def":{"name":"domain=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@@domain = value"}},{"html_id":"domain?-class-method","name":"domain?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use domain in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use domain in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"domain?","visibility":"Public","body":"@@domain"}},{"html_id":"encrypted:Bool-class-method","name":"encrypted","abstract":false,"def":{"name":"encrypted","return_type":"Bool","visibility":"Public","body":"@@encrypted.not_nil!"}},{"html_id":"encrypted=(value:Bool)-class-method","name":"encrypted=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : Bool)","def":{"name":"encrypted=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@encrypted = value"}},{"html_id":"encrypted?-class-method","name":"encrypted?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use encrypted in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use encrypted in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"encrypted?","visibility":"Public","body":"@@encrypted"}},{"html_id":"key:String-class-method","name":"key","abstract":false,"def":{"name":"key","return_type":"String","visibility":"Public","body":"@@key.not_nil!"}},{"html_id":"key=(value:String)-class-method","name":"key=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : String)","def":{"name":"key=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@key = value"}},{"html_id":"key?-class-method","name":"key?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use key in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use key in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"key?","visibility":"Public","body":"@@key"}},{"html_id":"max_age:Int32-class-method","name":"max_age","abstract":false,"def":{"name":"max_age","return_type":"Int32","visibility":"Public","body":"@@max_age.not_nil!"}},{"html_id":"max_age=(value:Int32)-class-method","name":"max_age=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : Int32)","def":{"name":"max_age=","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"visibility":"Public","body":"@@max_age = value"}},{"html_id":"max_age?-class-method","name":"max_age?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use max_age in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use max_age in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"max_age?","visibility":"Public","body":"@@max_age"}},{"html_id":"path:String-class-method","name":"path","abstract":false,"def":{"name":"path","return_type":"String","visibility":"Public","body":"@@path.not_nil!"}},{"html_id":"path=(value:String)-class-method","name":"path=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : String)","def":{"name":"path=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@path = value"}},{"html_id":"path?-class-method","name":"path?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use path in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use path in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"path?","visibility":"Public","body":"@@path"}},{"html_id":"secret:String-class-method","name":"secret","abstract":false,"def":{"name":"secret","return_type":"String","visibility":"Public","body":"@@secret.not_nil!"}},{"html_id":"secret=(value:String)-class-method","name":"secret=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : String)","def":{"name":"secret=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@secret = value"}},{"html_id":"secret?-class-method","name":"secret?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use secret in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use secret in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"secret?","visibility":"Public","body":"@@secret"}},{"html_id":"secure:Bool-class-method","name":"secure","abstract":false,"def":{"name":"secure","return_type":"Bool","visibility":"Public","body":"@@secure.not_nil!"}},{"html_id":"secure=(value:Bool)-class-method","name":"secure=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : Bool)","def":{"name":"secure=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@secure = value"}},{"html_id":"secure?-class-method","name":"secure?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use secure in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use secure in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"secure?","visibility":"Public","body":"@@secure"}},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"key\" => key, \"secret\" => secret, \"max_age\" => max_age, \"secure\" => secure, \"encrypted\" => encrypted, \"path\" => path, \"domain\" => domain}"}}]}]},{"html_id":"action-controller/ActionController/SpecHelper","path":"ActionController/SpecHelper.html","kind":"class","full_name":"ActionController::SpecHelper","name":"SpecHelper","abstract":false,"superclass":{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"action-controller/ActionController/Router","kind":"module","full_name":"ActionController::Router","name":"Router"},{"html_id":"action-controller/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"action-controller/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action-controller/spec_helper.cr","line_number":5,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/spec_helper.cr#L5"}],"repository_name":"action-controller","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"action-controller/ActionController/Router","kind":"module","full_name":"ActionController::Router","name":"Router"}],"namespace":{"html_id":"action-controller/ActionController","kind":"module","full_name":"ActionController","name":"ActionController"},"class_methods":[{"html_id":"client-class-method","name":"client","abstract":false,"location":{"filename":"src/action-controller/spec_helper.cr","line_number":24,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/spec_helper.cr#L24"},"def":{"name":"client","visibility":"Public","body":"ActionController::SpecHelper.new.hot_topic"}}],"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/action-controller/spec_helper.cr","line_number":10,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/spec_helper.cr#L10"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"hot_topic-instance-method","name":"hot_topic","abstract":false,"location":{"filename":"src/action-controller/spec_helper.cr","line_number":20,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/spec_helper.cr#L20"},"def":{"name":"hot_topic","visibility":"Public","body":"HotTopic.new(@route_handler)"}},{"html_id":"route_handler:ActionController::Router::RouteHandler-instance-method","name":"route_handler","abstract":false,"location":{"filename":"src/action-controller/spec_helper.cr","line_number":8,"url":"https://github.com/spider-gazelle/action-controller/blob/afbb689b7ede09bdefe54e0c763553073f2f0745/src/action-controller/spec_helper.cr#L8"},"def":{"name":"route_handler","visibility":"Public","body":"@route_handler"}}]}]}]}})